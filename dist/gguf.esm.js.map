{"version":3,"file":"gguf.esm.js","sources":["../src/core/model.js","../src/utils/logger.js","../src/core/loader.js","../src/core/inference.js","../src/core/tokenizer.js","../src/adapters/node.js","../src/adapters/browser.js","../src/adapters/react.js","../src/utils/memory.js","../src/utils/streaming.js","../src/utils/formats.js","../src/index.js"],"sourcesContent":["/**\r\n * Core model representation for GGUF models\r\n * @module core/model\r\n */\r\n\r\n/**\r\n * Class representing a GGUF model\r\n */\r\nclass GGUFModel {\r\n    /**\r\n     * Create a GGUF model\r\n     * @param {Object} options - Model options\r\n     * @param {string} options.id - Unique identifier for the model\r\n     * @param {string} options.path - Path or URL to the model file\r\n     * @param {Object} options.metadata - Model metadata\r\n     * @param {Object} options.session - Model session (implementation specific)\r\n     * @param {Object} options.tokenizer - Tokenizer for the model\r\n     */\r\n    constructor({ id, path, metadata = {}, session = null, tokenizer = null }) {\r\n      this.id = id;\r\n      this.path = path;\r\n      this.metadata = metadata;\r\n      this.session = session;\r\n      this.tokenizer = tokenizer;\r\n      this.lastUsed = Date.now();\r\n      this.isLoaded = false;\r\n      \r\n      // Add default metadata if not provided\r\n      if (!this.metadata.name) {\r\n        this.metadata.name = id || path.split('/').pop();\r\n      }\r\n      \r\n      if (!this.metadata.createdAt) {\r\n        this.metadata.createdAt = new Date().toISOString();\r\n      }\r\n    }\r\n    \r\n    /**\r\n     * Get model basic information\r\n     * @returns {Object} Model info\r\n     */\r\n    getInfo() {\r\n      return {\r\n        id: this.id,\r\n        name: this.metadata.name,\r\n        path: this.path,\r\n        isLoaded: this.isLoaded,\r\n        lastUsed: this.lastUsed,\r\n        ...this.metadata\r\n      };\r\n    }\r\n    \r\n    /**\r\n     * Updates the model's last used timestamp\r\n     */\r\n    updateLastUsed() {\r\n      this.lastUsed = Date.now();\r\n    }\r\n    \r\n    /**\r\n     * Unload the model to free resources\r\n     */\r\n    unload() {\r\n      this.session = null;\r\n      this.isLoaded = false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Generation options for text inference\r\n   */\r\n  class GenerationOptions {\r\n    /**\r\n     * Create generation options\r\n     * @param {Object} options - Generation parameters\r\n     * @param {number} [options.maxTokens=100] - Maximum tokens to generate\r\n     * @param {number} [options.temperature=0.7] - Sampling temperature (0-2)\r\n     * @param {number} [options.topP=0.9] - Top-p sampling parameter (0-1)\r\n     * @param {number} [options.topK=40] - Top-k sampling parameter\r\n     * @param {number} [options.repetitionPenalty=1.1] - Penalty for repetition\r\n     * @param {number} [options.seed] - Random seed for reproducibility\r\n     * @param {string[]} [options.stopSequences] - Sequences to stop generation\r\n     */\r\n    constructor({\r\n      maxTokens = 100,\r\n      temperature = 0.7,\r\n      topP = 0.9,\r\n      topK = 40,\r\n      repetitionPenalty = 1.1,\r\n      seed,\r\n      stopSequences = []\r\n    } = {}) {\r\n      this.maxTokens = maxTokens;\r\n      this.temperature = temperature;\r\n      this.topP = topP;\r\n      this.topK = topK;\r\n      this.repetitionPenalty = repetitionPenalty;\r\n      this.seed = seed;\r\n      this.stopSequences = stopSequences;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Model context for token sequence processing\r\n   */\r\n  class ModelContext {\r\n    /**\r\n     * Create a model context\r\n     * @param {Object} options - Context options\r\n     * @param {number[]} [options.tokens=[]] - Input tokens\r\n     * @param {number} [options.contextSize=2048] - Maximum context size\r\n     */\r\n    constructor({ tokens = [], contextSize = 2048 } = {}) {\r\n      this.tokens = tokens;\r\n      this.contextSize = contextSize;\r\n      this.outputTokens = [];\r\n    }\r\n    \r\n    /**\r\n     * Add new tokens to the context\r\n     * @param {number[]} tokens - Tokens to add\r\n     */\r\n    addTokens(tokens) {\r\n      this.tokens = [...this.tokens, ...tokens];\r\n      \r\n      // Truncate if context exceeds limit\r\n      if (this.tokens.length > this.contextSize) {\r\n        this.tokens = this.tokens.slice(-this.contextSize);\r\n      }\r\n    }\r\n    \r\n    /**\r\n     * Add an output token\r\n     * @param {number} token - Token to add\r\n     */\r\n    addOutputToken(token) {\r\n      this.outputTokens.push(token);\r\n    }\r\n    \r\n    /**\r\n     * Get the current context length\r\n     * @returns {number} Context length\r\n     */\r\n    getContextLength() {\r\n      return this.tokens.length;\r\n    }\r\n    \r\n    /**\r\n     * Get the remaining context space\r\n     * @returns {number} Remaining space\r\n     */\r\n    getRemainingSpace() {\r\n      return this.contextSize - this.tokens.length;\r\n    }\r\n    \r\n    /**\r\n     * Clear all tokens from context\r\n     */\r\n    clear() {\r\n      this.tokens = [];\r\n      this.outputTokens = [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Create a model ID from a path\r\n   * @param {string} path - Model path\r\n   * @returns {string} Model ID\r\n   */\r\n  function createModelId(path) {\r\n    // Extract filename without extension\r\n    const filename = path.split('/').pop().split('.')[0];\r\n    \r\n    // Create a simple hash from the full path\r\n    let hash = 0;\r\n    for (let i = 0; i < path.length; i++) {\r\n      hash = ((hash << 5) - hash) + path.charCodeAt(i);\r\n      hash = hash & hash; // Convert to 32-bit integer\r\n    }\r\n    \r\n    return `${filename}-${Math.abs(hash).toString(16).substring(0, 8)}`;\r\n  }\r\n  \r\n  module.exports = {\r\n    GGUFModel,\r\n    GenerationOptions,\r\n    ModelContext,\r\n    createModelId\r\n  };","/**\r\n * Simple logging utilities for GGUF.js\r\n * @module utils/logger\r\n */\r\n\r\n// Log levels\r\nconst LOG_LEVELS = {\r\n    NONE: 0,\r\n    ERROR: 1,\r\n    WARN: 2,\r\n    INFO: 3,\r\n    DEBUG: 4\r\n  };\r\n  \r\n  // Default configuration\r\n  let config = {\r\n    level: process.env.NODE_ENV === 'production' ? LOG_LEVELS.INFO : LOG_LEVELS.DEBUG,\r\n    prefix: 'GGUF.js',\r\n    useColors: true,\r\n    timestamp: true,\r\n    showInConsole: true\r\n  };\r\n  \r\n  // Color codes for console output\r\n  const COLORS = {\r\n    reset: '\\x1b[0m',\r\n    black: '\\x1b[30m',\r\n    red: '\\x1b[31m',\r\n    green: '\\x1b[32m',\r\n    yellow: '\\x1b[33m',\r\n    blue: '\\x1b[34m',\r\n    magenta: '\\x1b[35m',\r\n    cyan: '\\x1b[36m',\r\n    white: '\\x1b[37m',\r\n    \r\n    // Level-specific colors\r\n    error: '\\x1b[31m', // red\r\n    warn: '\\x1b[33m',  // yellow\r\n    info: '\\x1b[36m',  // cyan\r\n    debug: '\\x1b[90m', // gray\r\n    prefix: '\\x1b[35m' // magenta\r\n  };\r\n  \r\n  // Store for log entries (can be used for log retrieval in testing/debug UIs)\r\n  const logStore = [];\r\n  const MAX_LOG_STORE = 1000; // Maximum number of entries to keep\r\n  \r\n  /**\r\n   * Configure the logger\r\n   * @param {Object} options - Configuration options\r\n   * @param {string} options.level - Log level ('none', 'error', 'warn', 'info', 'debug')\r\n   * @param {string} options.prefix - Prefix for log messages\r\n   * @param {boolean} options.useColors - Whether to use colors in console output\r\n   * @param {boolean} options.timestamp - Whether to include timestamps\r\n   * @param {boolean} options.showInConsole - Whether to show logs in console\r\n   */\r\n  function configure(options = {}) {\r\n    if (options.level !== undefined) {\r\n      if (typeof options.level === 'string') {\r\n        const levelName = options.level.toUpperCase();\r\n        if (LOG_LEVELS[levelName] !== undefined) {\r\n          config.level = LOG_LEVELS[levelName];\r\n        }\r\n      } else if (typeof options.level === 'number') {\r\n        config.level = options.level;\r\n      }\r\n    }\r\n    \r\n    if (options.prefix !== undefined) config.prefix = options.prefix;\r\n    if (options.useColors !== undefined) config.useColors = !!options.useColors;\r\n    if (options.timestamp !== undefined) config.timestamp = !!options.timestamp;\r\n    if (options.showInConsole !== undefined) config.showInConsole = !!options.showInConsole;\r\n  }\r\n  \r\n  /**\r\n   * Format a log message\r\n   * @private\r\n   * @param {string} level - Log level name\r\n   * @param {string} message - Log message\r\n   * @param {Object|undefined} data - Additional data to log\r\n   * @returns {string} Formatted log message\r\n   */\r\n  function formatMessage(level, message, data) {\r\n    const parts = [];\r\n    \r\n    // Add timestamp if enabled\r\n    if (config.timestamp) {\r\n      const now = new Date().toISOString();\r\n      if (config.useColors) {\r\n        parts.push(`${COLORS.debug}[${now}]${COLORS.reset}`);\r\n      } else {\r\n        parts.push(`[${now}]`);\r\n      }\r\n    }\r\n    \r\n    // Add prefix if set\r\n    if (config.prefix) {\r\n      if (config.useColors) {\r\n        parts.push(`${COLORS.prefix}[${config.prefix}]${COLORS.reset}`);\r\n      } else {\r\n        parts.push(`[${config.prefix}]`);\r\n      }\r\n    }\r\n    \r\n    // Add level\r\n    if (config.useColors) {\r\n      parts.push(`${COLORS[level.toLowerCase()]}[${level}]${COLORS.reset}`);\r\n    } else {\r\n      parts.push(`[${level}]`);\r\n    }\r\n    \r\n    // Add message\r\n    parts.push(message);\r\n    \r\n    // Format as string\r\n    return parts.join(' ');\r\n  }\r\n  \r\n  /**\r\n   * Log a message at a specific level\r\n   * @private\r\n   * @param {string} level - Log level name\r\n   * @param {string} message - Log message\r\n   * @param {Object|undefined} data - Additional data to log\r\n   */\r\n  function log(level, message, data) {\r\n    const levelValue = LOG_LEVELS[level.toUpperCase()];\r\n    \r\n    // Skip if log level is too low\r\n    if (levelValue > config.level) return;\r\n    \r\n    // Format the message\r\n    const formattedMessage = formatMessage(level, message, data);\r\n    \r\n    // Store in log history\r\n    const logEntry = {\r\n      level,\r\n      message,\r\n      data,\r\n      timestamp: new Date(),\r\n      formatted: formattedMessage\r\n    };\r\n    \r\n    logStore.push(logEntry);\r\n    if (logStore.length > MAX_LOG_STORE) {\r\n      logStore.shift(); // Remove oldest entry\r\n    }\r\n    \r\n    // Output to console if enabled\r\n    if (config.showInConsole) {\r\n      const consoleMethod = level.toLowerCase();\r\n      \r\n      if (console[consoleMethod]) {\r\n        if (data !== undefined) {\r\n          console[consoleMethod](formattedMessage, data);\r\n        } else {\r\n          console[consoleMethod](formattedMessage);\r\n        }\r\n      } else {\r\n        console.log(formattedMessage);\r\n      }\r\n    }\r\n    \r\n    return logEntry;\r\n  }\r\n  \r\n  /**\r\n   * Log an error message\r\n   * @param {string} message - Error message\r\n   * @param {Error|Object|undefined} error - Error object or additional data\r\n   */\r\n  function error(message, error) {\r\n    let errorData;\r\n    \r\n    if (error instanceof Error) {\r\n      errorData = {\r\n        name: error.name,\r\n        message: error.message,\r\n        stack: error.stack\r\n      };\r\n    } else {\r\n      errorData = error;\r\n    }\r\n    \r\n    return log('ERROR', message, errorData);\r\n  }\r\n  \r\n  /**\r\n   * Log a warning message\r\n   * @param {string} message - Warning message\r\n   * @param {Object|undefined} data - Additional data\r\n   */\r\n  function warn(message, data) {\r\n    return log('WARN', message, data);\r\n  }\r\n  \r\n  /**\r\n   * Log an info message\r\n   * @param {string} message - Info message\r\n   * @param {Object|undefined} data - Additional data\r\n   */\r\n  function info(message, data) {\r\n    return log('INFO', message, data);\r\n  }\r\n  \r\n  /**\r\n   * Log a debug message\r\n   * @param {string} message - Debug message\r\n   * @param {Object|undefined} data - Additional data\r\n   */\r\n  function debug(message, data) {\r\n    return log('DEBUG', message, data);\r\n  }\r\n  \r\n  /**\r\n   * Get all stored log entries\r\n   * @returns {Array} Array of log entries\r\n   */\r\n  function getLogs() {\r\n    return [...logStore];\r\n  }\r\n  \r\n  /**\r\n   * Clear stored log entries\r\n   */\r\n  function clearLogs() {\r\n    logStore.length = 0;\r\n  }\r\n  \r\n  /**\r\n   * Create a logger instance with its own prefix\r\n   * @param {string} prefix - Logger prefix\r\n   * @returns {Object} Logger instance\r\n   */\r\n  function createLogger(prefix) {\r\n    return {\r\n      error: (message, data) => error(`[${prefix}] ${message}`, data),\r\n      warn: (message, data) => warn(`[${prefix}] ${message}`, data),\r\n      info: (message, data) => info(`[${prefix}] ${message}`, data),\r\n      debug: (message, data) => debug(`[${prefix}] ${message}`, data)\r\n    };\r\n  }\r\n  \r\n  module.exports = {\r\n    configure,\r\n    error,\r\n    warn,\r\n    info,\r\n    debug,\r\n    getLogs,\r\n    clearLogs,\r\n    createLogger,\r\n    LOG_LEVELS\r\n  };","/**\r\n * GGUF model loader\r\n * @module core/loader\r\n */\r\n\r\nconst { GGUFModel, createModelId } = require('./model');\r\nconst logger = require('../utils/logger');\r\n\r\n/**\r\n * Model loading options\r\n * @typedef {Object} LoadOptions\r\n * @property {boolean} [useCache=true] - Whether to cache the model\r\n * @property {string} [quantization='q4_0'] - Quantization format to use\r\n * @property {number} [contextSize=2048] - Model context size\r\n * @property {boolean} [lowMemory=false] - Whether to use low memory mode\r\n * @property {string} [modelId] - Custom model ID (auto-generated if not provided)\r\n * @property {Object} [metadata] - Additional model metadata\r\n */\r\n\r\n/**\r\n * Registry of loaded models\r\n * @type {Map<string, GGUFModel>}\r\n */\r\nconst loadedModels = new Map();\r\n\r\n/**\r\n * Load a GGUF model\r\n * @param {string} path - Path or URL to the model file\r\n * @param {LoadOptions} [options={}] - Model loading options\r\n * @param {Object} [adapter] - Environment-specific adapter\r\n * @returns {Promise<GGUFModel>} Loaded model\r\n */\r\nasync function loadModel(path, options = {}, adapter) {\r\n  if (!adapter) {\r\n    throw new Error('No adapter provided. Please use an environment-specific loader.');\r\n  }\r\n  \r\n  const {\r\n    useCache = true,\r\n    quantization = 'q4_0',\r\n    contextSize = 2048,\r\n    lowMemory = false,\r\n    modelId: customModelId,\r\n    metadata = {}\r\n  } = options;\r\n  \r\n  // Generate or use provided model ID\r\n  const modelId = customModelId || createModelId(path);\r\n  \r\n  // Check if model is already loaded\r\n  if (useCache && loadedModels.has(modelId)) {\r\n    logger.info(`Using cached model: ${modelId}`);\r\n    const cachedModel = loadedModels.get(modelId);\r\n    cachedModel.updateLastUsed();\r\n    return cachedModel;\r\n  }\r\n  \r\n  logger.info(`Loading model from: ${path}`);\r\n  logger.debug('Loading options:', { quantization, contextSize, lowMemory });\r\n  \r\n  try {\r\n    // Create model instance\r\n    const model = new GGUFModel({\r\n      id: modelId,\r\n      path,\r\n      metadata: {\r\n        ...metadata,\r\n        quantization,\r\n        contextSize,\r\n        lowMemory\r\n      }\r\n    });\r\n    \r\n    // Initialize the model with the adapter\r\n    const { session, tokenizer } = await adapter.initializeModel(path, {\r\n      quantization,\r\n      contextSize,\r\n      lowMemory\r\n    });\r\n    \r\n    model.session = session;\r\n    model.tokenizer = tokenizer;\r\n    model.isLoaded = true;\r\n    \r\n    // Store in cache if requested\r\n    if (useCache) {\r\n      loadedModels.set(modelId, model);\r\n    }\r\n    \r\n    logger.info(`Model loaded successfully: ${modelId}`);\r\n    return model;\r\n  } catch (error) {\r\n    logger.error(`Failed to load model: ${error.message}`);\r\n    throw new Error(`Failed to load GGUF model: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Unload a model from memory\r\n * @param {string} modelId - Model ID to unload\r\n * @param {Object} [adapter] - Environment-specific adapter\r\n * @returns {boolean} Whether the model was unloaded\r\n */\r\nfunction unloadModel(modelId, adapter) {\r\n  if (loadedModels.has(modelId)) {\r\n    const model = loadedModels.get(modelId);\r\n    \r\n    // Use adapter to free resources if provided\r\n    if (adapter && adapter.freeModel) {\r\n      adapter.freeModel(model);\r\n    }\r\n    \r\n    // Unload the model\r\n    model.unload();\r\n    loadedModels.delete(modelId);\r\n    \r\n    logger.info(`Model unloaded: ${modelId}`);\r\n    return true;\r\n  }\r\n  \r\n  logger.warn(`Model not found for unloading: ${modelId}`);\r\n  return false;\r\n}\r\n\r\n/**\r\n * Get a loaded model by ID\r\n * @param {string} modelId - Model ID\r\n * @returns {GGUFModel|null} The model or null if not found\r\n */\r\nfunction getModel(modelId) {\r\n  if (loadedModels.has(modelId)) {\r\n    const model = loadedModels.get(modelId);\r\n    model.updateLastUsed();\r\n    return model;\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * List all loaded models\r\n * @returns {GGUFModel[]} Array of loaded models\r\n */\r\nfunction listModels() {\r\n  return Array.from(loadedModels.values())\r\n    .map(model => model.getInfo())\r\n    .sort((a, b) => b.lastUsed - a.lastUsed);\r\n}\r\n\r\n/**\r\n * Clear all loaded models from memory\r\n * @param {Object} [adapter] - Environment-specific adapter\r\n */\r\nfunction clearModels(adapter) {\r\n  for (const [modelId, model] of loadedModels.entries()) {\r\n    // Use adapter to free resources if provided\r\n    if (adapter && adapter.freeModel) {\r\n      adapter.freeModel(model);\r\n    }\r\n    \r\n    model.unload();\r\n  }\r\n  \r\n  loadedModels.clear();\r\n  logger.info('All models unloaded from memory');\r\n}\r\n\r\nmodule.exports = {\r\n  loadModel,\r\n  unloadModel,\r\n  getModel,\r\n  listModels,\r\n  clearModels\r\n};","/**\r\n * GGUF inference engine\r\n * @module core/inference\r\n */\r\n\r\nconst { ModelContext, GenerationOptions } = require('./model');\r\nconst logger = require('../utils/logger');\r\n\r\n/**\r\n * Global cancellation flag for inference\r\n * @type {Map<string, boolean>}\r\n */\r\nconst cancellationFlags = new Map();\r\n\r\n/**\r\n * Run text generation with a model\r\n * @param {GGUFModel} model - The loaded model\r\n * @param {string} prompt - Input prompt\r\n * @param {Object} [options={}] - Generation options\r\n * @param {Object} [adapter] - Environment-specific adapter\r\n * @returns {Promise<string>} Generated text\r\n */\r\nasync function generate(model, prompt, options = {}, adapter) {\r\n  if (!adapter) {\r\n    throw new Error('No adapter provided. Please use an environment-specific inference engine.');\r\n  }\r\n  \r\n  if (!model || !model.isLoaded || !model.session) {\r\n    throw new Error('Model not loaded properly');\r\n  }\r\n  \r\n  // Reset cancellation flag\r\n  cancellationFlags.set(model.id, false);\r\n  \r\n  // Normalize options\r\n  const generationOptions = new GenerationOptions(options);\r\n  \r\n  logger.info(`Generating with model: ${model.id}`);\r\n  logger.debug('Prompt:', prompt.substring(0, 100) + (prompt.length > 100 ? '...' : ''));\r\n  logger.debug('Options:', generationOptions);\r\n  \r\n  try {\r\n    // Tokenize the prompt\r\n    const tokens = await adapter.tokenize(model, prompt);\r\n    logger.debug(`Tokenized prompt: ${tokens.length} tokens`);\r\n    \r\n    // Create model context\r\n    const context = new ModelContext({\r\n      tokens,\r\n      contextSize: model.metadata.contextSize || 2048\r\n    });\r\n    \r\n    // Check context length\r\n    if (context.getContextLength() >= context.contextSize) {\r\n      logger.warn(`Prompt exceeds context size: ${context.getContextLength()} tokens`);\r\n      // Truncate context if necessary\r\n      context.tokens = context.tokens.slice(-context.contextSize + 100); // Leave room for generation\r\n    }\r\n    \r\n    // Reserve tokens for generation\r\n    const maxNewTokens = Math.min(\r\n      generationOptions.maxTokens,\r\n      context.getRemainingSpace() - 10 // Leave some buffer\r\n    );\r\n    \r\n    // Run the inference\r\n    const outputTokens = await adapter.runInference(\r\n      model,\r\n      context,\r\n      {\r\n        ...generationOptions,\r\n        maxTokens: maxNewTokens\r\n      },\r\n      () => cancellationFlags.get(model.id)\r\n    );\r\n    \r\n    // Detokenize the output\r\n    const outputText = await adapter.detokenize(model, outputTokens);\r\n    \r\n    logger.info(`Generated ${outputTokens.length} tokens`);\r\n    return outputText;\r\n  } catch (error) {\r\n    if (cancellationFlags.get(model.id)) {\r\n      logger.info('Generation was cancelled');\r\n      return '';\r\n    }\r\n    \r\n    logger.error(`Generation failed: ${error.message}`);\r\n    throw new Error(`Text generation failed: ${error.message}`);\r\n  } finally {\r\n    model.updateLastUsed();\r\n  }\r\n}\r\n\r\n/**\r\n * Token callback type \r\n * @callback TokenCallback\r\n * @param {string} token - Generated token\r\n * @param {boolean} isDone - Whether generation is complete\r\n */\r\n\r\n/**\r\n * Run streaming text generation with a model\r\n * @param {GGUFModel} model - The loaded model\r\n * @param {string} prompt - Input prompt\r\n * @param {TokenCallback} onToken - Callback for each token\r\n * @param {Object} [options={}] - Generation options\r\n * @param {Object} [adapter] - Environment-specific adapter\r\n * @returns {Promise<void>}\r\n */\r\nasync function streamGenerate(model, prompt, onToken, options = {}, adapter) {\r\n  if (!adapter) {\r\n    throw new Error('No adapter provided. Please use an environment-specific inference engine.');\r\n  }\r\n  \r\n  if (!model || !model.isLoaded || !model.session) {\r\n    throw new Error('Model not loaded properly');\r\n  }\r\n  \r\n  // Reset cancellation flag\r\n  cancellationFlags.set(model.id, false);\r\n  \r\n  // Normalize options\r\n  const generationOptions = new GenerationOptions(options);\r\n  \r\n  logger.info(`Streaming with model: ${model.id}`);\r\n  logger.debug('Prompt:', prompt.substring(0, 100) + (prompt.length > 100 ? '...' : ''));\r\n  \r\n  try {\r\n    // Tokenize the prompt\r\n    const tokens = await adapter.tokenize(model, prompt);\r\n    \r\n    // Create model context\r\n    const context = new ModelContext({\r\n      tokens,\r\n      contextSize: model.metadata.contextSize || 2048\r\n    });\r\n    \r\n    // Check context length\r\n    if (context.getContextLength() >= context.contextSize) {\r\n      logger.warn(`Prompt exceeds context size: ${context.getContextLength()} tokens`);\r\n      context.tokens = context.tokens.slice(-context.contextSize + 100);\r\n    }\r\n    \r\n    // Reserve tokens for generation\r\n    const maxNewTokens = Math.min(\r\n      generationOptions.maxTokens,\r\n      context.getRemainingSpace() - 10\r\n    );\r\n    \r\n    // Token callback wrapper\r\n    const tokenCallback = async (tokenId) => {\r\n      try {\r\n        const tokenText = await adapter.detokenizeToken(model, tokenId);\r\n        onToken(tokenText, false);\r\n      } catch (error) {\r\n        logger.error(`Token callback error: ${error.message}`);\r\n      }\r\n    };\r\n    \r\n    // Run streaming inference\r\n    await adapter.runInferenceStreaming(\r\n      model,\r\n      context,\r\n      tokenCallback,\r\n      {\r\n        ...generationOptions,\r\n        maxTokens: maxNewTokens\r\n      },\r\n      () => cancellationFlags.get(model.id)\r\n    );\r\n    \r\n    // Signal completion\r\n    onToken('', true);\r\n    logger.info('Streaming generation complete');\r\n  } catch (error) {\r\n    if (cancellationFlags.get(model.id)) {\r\n      logger.info('Streaming was cancelled');\r\n      onToken('', true);\r\n      return;\r\n    }\r\n    \r\n    logger.error(`Streaming failed: ${error.message}`);\r\n    onToken('', true);\r\n    throw new Error(`Streaming text generation failed: ${error.message}`);\r\n  } finally {\r\n    model.updateLastUsed();\r\n  }\r\n}\r\n\r\n/**\r\n * Cancel an ongoing generation\r\n * @param {GGUFModel|string} modelOrId - Model or model ID\r\n * @returns {boolean} Whether cancellation was set\r\n */\r\nfunction cancelGeneration(modelOrId) {\r\n  const modelId = typeof modelOrId === 'string' ? modelOrId : modelOrId.id;\r\n  \r\n  if (!modelId) {\r\n    logger.warn('No model ID provided for cancellation');\r\n    return false;\r\n  }\r\n  \r\n  logger.info(`Cancelling generation for model: ${modelId}`);\r\n  cancellationFlags.set(modelId, true);\r\n  return true;\r\n}\r\n\r\nmodule.exports = {\r\n  generate,\r\n  streamGenerate,\r\n  cancelGeneration\r\n};","/**\r\n * Tokenization utilities for GGUF models\r\n * @module core/tokenizer\r\n */\r\n\r\nconst logger = require('../utils/logger');\r\n\r\n/**\r\n * Base tokenizer interface\r\n */\r\nclass BaseTokenizer {\r\n  /**\r\n   * Encode text to token IDs\r\n   * @param {string} text - Text to encode\r\n   * @returns {Array<number>} Token IDs\r\n   */\r\n  encode(text) {\r\n    throw new Error('encode() method must be implemented by subclass');\r\n  }\r\n\r\n  /**\r\n   * Decode token IDs to text\r\n   * @param {Array<number>} tokens - Token IDs to decode\r\n   * @returns {string} Decoded text\r\n   */\r\n  decode(tokens) {\r\n    throw new Error('decode() method must be implemented by subclass');\r\n  }\r\n\r\n  /**\r\n   * Decode a single token ID to text\r\n   * @param {number} token - Token ID to decode\r\n   * @returns {string} Decoded text for the token\r\n   */\r\n  decodeToken(token) {\r\n    return this.decode([token]);\r\n  }\r\n}\r\n\r\n/**\r\n * Simple fallback tokenizer that works at character level\r\n * Used when a model doesn't provide its own tokenizer\r\n */\r\nclass CharacterTokenizer extends BaseTokenizer {\r\n  constructor() {\r\n    super();\r\n    this.encoder = new Map();\r\n    this.decoder = new Map();\r\n    \r\n    // Initialize with basic ASCII characters\r\n    for (let i = 0; i < 128; i++) {\r\n      const char = String.fromCharCode(i);\r\n      this.encoder.set(char, i);\r\n      this.decoder.set(i, char);\r\n    }\r\n\r\n    // Add special tokens\r\n    this.specialTokens = {\r\n      BOS: 128, // Beginning of sequence\r\n      EOS: 129, // End of sequence\r\n      PAD: 130, // Padding\r\n      UNK: 131, // Unknown\r\n    };\r\n\r\n    Object.entries(this.specialTokens).forEach(([name, id]) => {\r\n      this.decoder.set(id, `<${name}>`);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Encode text to token IDs\r\n   * @param {string} text - Text to encode\r\n   * @returns {Array<number>} Token IDs\r\n   */\r\n  encode(text) {\r\n    return Array.from(text).map(char => {\r\n      if (this.encoder.has(char)) {\r\n        return this.encoder.get(char);\r\n      }\r\n      return this.specialTokens.UNK; // Unknown token\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Decode token IDs to text\r\n   * @param {Array<number>} tokens - Token IDs to decode\r\n   * @returns {string} Decoded text\r\n   */\r\n  decode(tokens) {\r\n    return tokens.map(token => {\r\n      if (this.decoder.has(token)) {\r\n        return this.decoder.get(token);\r\n      }\r\n      return ''; // Skip unknown tokens\r\n    }).join('');\r\n  }\r\n}\r\n\r\n/**\r\n * BPE (Byte-Pair Encoding) tokenizer\r\n * Basic implementation of BPE tokenization used by many LLMs\r\n */\r\nclass BPETokenizer extends BaseTokenizer {\r\n  /**\r\n   * Create a BPE tokenizer\r\n   * @param {Object} config - Tokenizer configuration\r\n   * @param {Object} config.vocab - Vocabulary mapping (token string to ID)\r\n   * @param {Array<Array<string>>} config.merges - BPE merge rules\r\n   */\r\n  constructor(config) {\r\n    super();\r\n    this.vocab = new Map(Object.entries(config.vocab || {}).map(([k, v]) => [k, Number(v)]));\r\n    this.decoder = new Map(Array.from(this.vocab.entries()).map(([k, v]) => [v, k]));\r\n    this.merges = config.merges || [];\r\n    this.specialTokens = config.specialTokens || {};\r\n    \r\n    // Build merge pattern cache\r\n    this.mergePatterns = new Map();\r\n    this.buildMergePatterns();\r\n  }\r\n\r\n  /**\r\n   * Build cached patterns for BPE merges\r\n   */\r\n  buildMergePatterns() {\r\n    this.merges.forEach((pair, i) => {\r\n      const [first, second] = pair;\r\n      const pattern = new RegExp(`(?<=^|\\\\s)(${first})(${second})(?=\\\\s|$)`, 'g');\r\n      this.mergePatterns.set(i, {\r\n        pattern,\r\n        replacement: `${first}${second}`\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Encode text using BPE algorithm\r\n   * @param {string} text - Text to encode\r\n   * @returns {Array<number>} Token IDs\r\n   */\r\n  encode(text) {\r\n    if (!text) return [];\r\n    \r\n    // First, split into words and handle them separately\r\n    return text.split(/(\\s+)/).flatMap(part => {\r\n      if (!part.trim()) {\r\n        // For whitespace, simply look up in the vocabulary\r\n        const whitespaceId = this.vocab.get(part) || this.vocab.get('<UNK>') || 0;\r\n        return [whitespaceId];\r\n      }\r\n      \r\n      // Start with characters\r\n      let tokens = Array.from(part).map(c => c);\r\n      \r\n      // Apply BPE merges\r\n      for (let i = 0; i < this.merges.length; i++) {\r\n        const [first, second] = this.merges[i];\r\n        \r\n        let j = 0;\r\n        while (j < tokens.length - 1) {\r\n          if (tokens[j] === first && tokens[j + 1] === second) {\r\n            tokens = [\r\n              ...tokens.slice(0, j),\r\n              first + second,\r\n              ...tokens.slice(j + 2)\r\n            ];\r\n          } else {\r\n            j++;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Convert subwords to token IDs\r\n      return tokens.map(token => {\r\n        if (this.vocab.has(token)) {\r\n          return this.vocab.get(token);\r\n        }\r\n        // Fall back to unknown token\r\n        return this.vocab.get('<UNK>') || 0;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Decode token IDs back to text\r\n   * @param {Array<number>} tokens - Token IDs to decode\r\n   * @returns {string} Decoded text\r\n   */\r\n  decode(tokens) {\r\n    return tokens.map(token => {\r\n      if (this.decoder.has(token)) {\r\n        return this.decoder.get(token);\r\n      }\r\n      return ''; // Skip unknown tokens\r\n    }).join('');\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a tokenizer from a vocabulary or model config\r\n * @param {Object} config - Tokenizer configuration\r\n * @returns {BaseTokenizer} Appropriate tokenizer instance\r\n */\r\nfunction createTokenizer(config) {\r\n  if (!config) {\r\n    logger.warn('No tokenizer configuration provided, using fallback character tokenizer');\r\n    return new CharacterTokenizer();\r\n  }\r\n  \r\n  // Determine tokenizer type from config\r\n  if (config.tokenizer_type === 'bpe' || config.merges) {\r\n    logger.info('Creating BPE tokenizer');\r\n    return new BPETokenizer(config);\r\n  }\r\n  \r\n  // Add more tokenizer types here as needed\r\n  \r\n  // Fallback to character tokenizer\r\n  logger.warn('Unknown tokenizer type, using fallback character tokenizer');\r\n  return new CharacterTokenizer();\r\n}\r\n\r\n/**\r\n * Load a tokenizer from a file\r\n * @param {string} path - Path to tokenizer file\r\n * @param {Object} adapter - Environment adapter\r\n * @returns {Promise<BaseTokenizer>} Loaded tokenizer\r\n */\r\nasync function loadTokenizerFromFile(path, adapter) {\r\n  try {\r\n    if (!adapter || !adapter.readFile) {\r\n      throw new Error('Environment adapter does not support file reading');\r\n    }\r\n    \r\n    const data = await adapter.readFile(path);\r\n    const config = JSON.parse(data);\r\n    return createTokenizer(config);\r\n  } catch (error) {\r\n    logger.error(`Failed to load tokenizer from ${path}: ${error.message}`);\r\n    return new CharacterTokenizer();\r\n  }\r\n}\r\n\r\n/**\r\n * Extract a tokenizer from a GGUF model\r\n * This is model-specific and depends on the adapter implementation\r\n * @param {Object} model - GGUF model object\r\n * @param {Object} adapter - Environment adapter\r\n * @returns {Promise<BaseTokenizer>} Extracted tokenizer\r\n */\r\nasync function extractTokenizerFromModel(model, adapter) {\r\n  try {\r\n    if (!adapter || !adapter.extractTokenizer) {\r\n      throw new Error('Environment adapter does not support tokenizer extraction');\r\n    }\r\n    \r\n    const config = await adapter.extractTokenizer(model);\r\n    return createTokenizer(config);\r\n  } catch (error) {\r\n    logger.error(`Failed to extract tokenizer from model: ${error.message}`);\r\n    return new CharacterTokenizer();\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  BaseTokenizer,\r\n  CharacterTokenizer,\r\n  BPETokenizer,\r\n  createTokenizer,\r\n  loadTokenizerFromFile,\r\n  extractTokenizerFromModel\r\n};","/**\r\n * Node.js adapter for GGUF models\r\n * @module adapters/node\r\n */\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst logger = require('../utils/logger');\r\n\r\n// We'll use node-llama-cpp for GGUF model handling\r\n// This needs to be installed as a dependency\r\nlet LlamaModel;\r\ntry {\r\n  const llamaCpp = require('node-llama-cpp');\r\n  LlamaModel = llamaCpp.LlamaModel;\r\n} catch (error) {\r\n  logger.warn('node-llama-cpp not found. Install it with: npm install node-llama-cpp');\r\n  LlamaModel = null;\r\n}\r\n\r\n/**\r\n * Initialize a GGUF model in Node.js environment\r\n * @param {string} modelPath - Path to the model file\r\n * @param {Object} options - Model options\r\n * @returns {Promise<Object>} Session and tokenizer\r\n */\r\nasync function initializeModel(modelPath, options = {}) {\r\n  if (!LlamaModel) {\r\n    throw new Error('node-llama-cpp is required but not installed');\r\n  }\r\n  \r\n  // Verify the model file exists\r\n  if (!fs.existsSync(modelPath)) {\r\n    throw new Error(`Model file not found: ${modelPath}`);\r\n  }\r\n  \r\n  logger.info(`Initializing GGUF model from: ${modelPath}`);\r\n  \r\n  // Default options\r\n  const {\r\n    contextSize = 2048,\r\n    quantization = 'q4_0',\r\n    lowMemory = false,\r\n    seed = Math.floor(Math.random() * 4294967295),\r\n    threads = Math.max(1, require('os').cpus().length / 2)\r\n  } = options;\r\n  \r\n  // Normalize path to absolute\r\n  const absolutePath = path.resolve(modelPath);\r\n  \r\n  try {\r\n    // Initialize llama.cpp model\r\n    const model = new LlamaModel({\r\n      modelPath: absolutePath,\r\n      contextSize,\r\n      seed,\r\n      threads,\r\n      useMlock: !lowMemory,\r\n      batchSize: 512,\r\n      // Ensure proper mapping for quantization\r\n      gpuLayers: 0 // Node.js typically doesn't use GPU\r\n    });\r\n    \r\n    // Create a tokenizer interface\r\n    const tokenizer = {\r\n      encode: async (text) => model.tokenize(text),\r\n      decode: async (tokens) => model.detokenize(tokens),\r\n      decodeToken: async (token) => model.detokenize([token])\r\n    };\r\n    \r\n    logger.info(`Model initialized successfully (context size: ${contextSize}, threads: ${threads})`);\r\n    \r\n    return {\r\n      session: model,\r\n      tokenizer\r\n    };\r\n  } catch (error) {\r\n    logger.error(`Failed to initialize model: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Tokenize text with the model\r\n * @param {Object} model - The GGUF model\r\n * @param {string} text - Text to tokenize\r\n * @returns {Promise<number[]>} Token IDs\r\n */\r\nasync function tokenize(model, text) {\r\n  if (!model.session) {\r\n    throw new Error('Model session not initialized');\r\n  }\r\n  \r\n  return model.session.tokenize(text);\r\n}\r\n\r\n/**\r\n * Detokenize tokens to text\r\n * @param {Object} model - The GGUF model\r\n * @param {number[]} tokens - Tokens to detokenize\r\n * @returns {Promise<string>} Detokenized text\r\n */\r\nasync function detokenize(model, tokens) {\r\n  if (!model.session) {\r\n    throw new Error('Model session not initialized');\r\n  }\r\n  \r\n  return model.session.detokenize(tokens);\r\n}\r\n\r\n/**\r\n * Detokenize a single token\r\n * @param {Object} model - The GGUF model\r\n * @param {number} token - Token to detokenize\r\n * @returns {Promise<string>} Detokenized token text\r\n */\r\nasync function detokenizeToken(model, token) {\r\n  if (!model.session) {\r\n    throw new Error('Model session not initialized');\r\n  }\r\n  \r\n  return model.session.detokenize([token]);\r\n}\r\n\r\n/**\r\n * Run inference with a model\r\n * @param {Object} model - The GGUF model\r\n * @param {Object} context - Model context\r\n * @param {Object} options - Generation options\r\n * @param {function} isCancelled - Function to check if generation is cancelled\r\n * @returns {Promise<number[]>} Generated token IDs\r\n */\r\nasync function runInference(model, context, options, isCancelled) {\r\n  if (!model.session) {\r\n    throw new Error('Model session not initialized');\r\n  }\r\n  \r\n  // Configure generation parameters\r\n  const params = {\r\n    nPredict: options.maxTokens,\r\n    temperature: options.temperature,\r\n    topP: options.topP,\r\n    topK: options.topK,\r\n    repeatPenalty: options.repetitionPenalty,\r\n    seed: options.seed,\r\n    // Include stop sequences if provided\r\n    stop: options.stopSequences || []\r\n  };\r\n  \r\n  // Create a completion using the existing tokens\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      // Use the node-llama-cpp API for completion\r\n      const completion = model.session.generate({\r\n        tokens: context.tokens,\r\n        ...params\r\n      });\r\n      \r\n      const outputTokens = [];\r\n      \r\n      // Process token by token\r\n      for (const token of completion) {\r\n        // Check for cancellation\r\n        if (isCancelled && isCancelled()) {\r\n          logger.info('Generation cancelled');\r\n          break;\r\n        }\r\n        \r\n        outputTokens.push(token);\r\n        \r\n        // Check if we've reached the maximum tokens\r\n        if (outputTokens.length >= params.nPredict) {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      resolve(outputTokens);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Run streaming inference with a model\r\n * @param {Object} model - The GGUF model\r\n * @param {Object} context - Model context\r\n * @param {function} onToken - Callback for each token\r\n * @param {Object} options - Generation options\r\n * @param {function} isCancelled - Function to check if generation is cancelled\r\n * @returns {Promise<void>}\r\n */\r\nasync function runInferenceStreaming(model, context, onToken, options, isCancelled) {\r\n  if (!model.session) {\r\n    throw new Error('Model session not initialized');\r\n  }\r\n  \r\n  // Configure generation parameters\r\n  const params = {\r\n    nPredict: options.maxTokens,\r\n    temperature: options.temperature,\r\n    topP: options.topP,\r\n    topK: options.topK,\r\n    repeatPenalty: options.repetitionPenalty,\r\n    seed: options.seed,\r\n    stop: options.stopSequences || []\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      // Use the node-llama-cpp API for streaming\r\n      const completion = model.session.generate({\r\n        tokens: context.tokens,\r\n        ...params\r\n      });\r\n      \r\n      // Process tokens in a streaming fashion\r\n      let tokenCount = 0;\r\n      \r\n      for (const token of completion) {\r\n        // Check for cancellation\r\n        if (isCancelled && isCancelled()) {\r\n          logger.info('Streaming generation cancelled');\r\n          break;\r\n        }\r\n        \r\n        // Call token callback\r\n        onToken(token);\r\n        tokenCount++;\r\n        \r\n        // Check if we've reached the maximum tokens\r\n        if (tokenCount >= params.nPredict) {\r\n          break;\r\n        }\r\n      }\r\n      \r\n      resolve();\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Free resources used by a model\r\n * @param {Object} model - The model to free\r\n */\r\nfunction freeModel(model) {\r\n  if (model.session && typeof model.session.dispose === 'function') {\r\n    model.session.dispose();\r\n    logger.info(`Model resources freed: ${model.id}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Discover GGUF models in a directory\r\n * @param {string} directory - Directory to search\r\n * @returns {Promise<Object[]>} Array of model info objects\r\n */\r\nasync function discoverModels(directory) {\r\n  if (!fs.existsSync(directory)) {\r\n    logger.warn(`Model directory not found: ${directory}`);\r\n    return [];\r\n  }\r\n  \r\n  logger.info(`Searching for GGUF models in: ${directory}`);\r\n  \r\n  try {\r\n    const files = fs.readdirSync(directory);\r\n    const modelFiles = files.filter(file => file.toLowerCase().endsWith('.gguf'));\r\n    \r\n    // Create model info objects\r\n    const models = modelFiles.map(file => {\r\n      const filePath = path.join(directory, file);\r\n      const stats = fs.statSync(filePath);\r\n      \r\n      // Parse basic model info from filename\r\n      // Typical format: model-name.Q4_K_M.gguf\r\n      const baseName = path.basename(file, '.gguf');\r\n      const parts = baseName.split('.');\r\n      const name = parts[0];\r\n      const quantization = parts.length > 1 ? parts[1] : 'unknown';\r\n      \r\n      return {\r\n        id: baseName,\r\n        name: name,\r\n        path: filePath,\r\n        quantization,\r\n        size: stats.size,\r\n        createdAt: stats.birthtime.toISOString()\r\n      };\r\n    });\r\n    \r\n    logger.info(`Found ${models.length} GGUF models`);\r\n    return models;\r\n  } catch (error) {\r\n    logger.error(`Error discovering models: ${error.message}`);\r\n    return [];\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  initializeModel,\r\n  tokenize,\r\n  detokenize,\r\n  detokenizeToken,\r\n  runInference,\r\n  runInferenceStreaming,\r\n  freeModel,\r\n  discoverModels\r\n};","/**\r\n * Browser-specific adapter for GGUF.js\r\n * @module adapters/browser\r\n */\r\n\r\nconst logger = require('../utils/logger');\r\n\r\n// Check if WebAssembly is available\r\nconst hasWebAssembly = typeof WebAssembly === 'object' && \r\n                        typeof WebAssembly.instantiate === 'function';\r\n\r\n// WASM module and instance\r\nlet wasmModule = null;\r\nlet wasmInstance = null;\r\nlet isInitialized = false;\r\n\r\n// Default WASM URL - in production, this would point to your hosted WASM build\r\nconst DEFAULT_WASM_URL = 'https://cdn.jsdelivr.net/npm/gguf.js/dist/wasm/gguf-web.wasm';\r\n\r\n/**\r\n * Initialize the WASM environment\r\n * \r\n * @param {Object} options - Initialization options\r\n * @param {string} [options.wasmUrl] - URL to the WASM binary\r\n * @returns {Promise<boolean>} Whether initialization was successful\r\n */\r\nasync function initializeWasm(options = {}) {\r\n  if (isInitialized) {\r\n    return true;\r\n  }\r\n  \r\n  if (!hasWebAssembly) {\r\n    logger.error('WebAssembly is not supported in this browser');\r\n    return false;\r\n  }\r\n  \r\n  const wasmUrl = options.wasmUrl || DEFAULT_WASM_URL;\r\n  \r\n  try {\r\n    logger.info(`Loading WASM from ${wasmUrl}`);\r\n    \r\n    // Fetch the WASM binary\r\n    const response = await fetch(wasmUrl);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch WASM: ${response.statusText}`);\r\n    }\r\n    \r\n    const wasmBinary = await response.arrayBuffer();\r\n    \r\n    // Compile the WASM module\r\n    wasmModule = await WebAssembly.compile(wasmBinary);\r\n    \r\n    // Create memory and import object\r\n    const memory = new WebAssembly.Memory({ initial: 256, maximum: 2048 });\r\n    \r\n    // Define imports needed by the WASM module\r\n    const importObject = {\r\n      env: {\r\n        memory,\r\n        // Add required JavaScript functions that the WASM module can call\r\n        consoleLog: (ptr, len) => {\r\n          const bytes = new Uint8Array(memory.buffer, ptr, len);\r\n          const text = new TextDecoder().decode(bytes);\r\n          console.log(`[WASM] ${text}`);\r\n        },\r\n        consoleError: (ptr, len) => {\r\n          const bytes = new Uint8Array(memory.buffer, ptr, len);\r\n          const text = new TextDecoder().decode(bytes);\r\n          console.error(`[WASM] ${text}`);\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Instantiate the WASM module\r\n    wasmInstance = await WebAssembly.instantiate(wasmModule, importObject);\r\n    \r\n    isInitialized = true;\r\n    logger.info('WASM initialized successfully');\r\n    return true;\r\n  } catch (error) {\r\n    logger.error(`Failed to initialize WASM: ${error.message}`);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize a GGUF model in the browser\r\n * \r\n * @param {string|ArrayBuffer} modelPathOrData - Path to model or model data\r\n * @param {Object} options - Model options\r\n * @returns {Promise<Object>} Session and tokenizer objects\r\n */\r\nasync function initializeModel(modelPathOrData, options = {}) {\r\n  // Ensure WASM is initialized\r\n  if (!isInitialized) {\r\n    const initialized = await initializeWasm(options);\r\n    if (!initialized) {\r\n      throw new Error('WebAssembly initialization failed');\r\n    }\r\n  }\r\n  \r\n  let modelData;\r\n  \r\n  // Check if modelPathOrData is a path or ArrayBuffer\r\n  if (typeof modelPathOrData === 'string') {\r\n    logger.info(`Fetching model from ${modelPathOrData}`);\r\n    \r\n    try {\r\n      const response = await fetch(modelPathOrData);\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch model: ${response.statusText}`);\r\n      }\r\n      \r\n      modelData = await response.arrayBuffer();\r\n      logger.info(`Model fetched: ${modelData.byteLength} bytes`);\r\n    } catch (error) {\r\n      throw new Error(`Failed to fetch model: ${error.message}`);\r\n    }\r\n  } else if (modelPathOrData instanceof ArrayBuffer) {\r\n    modelData = modelPathOrData;\r\n    logger.info(`Using provided model data: ${modelData.byteLength} bytes`);\r\n  } else {\r\n    throw new Error('Model must be a URL string or ArrayBuffer');\r\n  }\r\n  \r\n  try {\r\n    // Create a shared buffer for the model data\r\n    const modelBuffer = new Uint8Array(modelData);\r\n    \r\n    // In a real implementation, we'd now load the model into WASM memory\r\n    // and call initialization functions\r\n    \r\n    // Get exports from WASM instance\r\n    const exports = wasmInstance.exports;\r\n    \r\n    // Allocate memory for the model in WASM\r\n    const modelPtr = exports.allocateMemory(modelBuffer.length);\r\n    \r\n    // Create a view into the WASM memory\r\n    const memory = exports.memory;\r\n    const memoryView = new Uint8Array(memory.buffer);\r\n    \r\n    // Copy model data to WASM memory\r\n    memoryView.set(modelBuffer, modelPtr);\r\n    \r\n    // Call WASM function to load the model\r\n    const modelId = exports.loadModel(modelPtr, modelBuffer.length, options.contextSize || 2048);\r\n    \r\n    if (modelId < 0) {\r\n      throw new Error(`Failed to load model: error code ${modelId}`);\r\n    }\r\n    \r\n    logger.info(`Model loaded with ID: ${modelId}`);\r\n    \r\n    // Create tokenizer interface\r\n    const tokenizer = {\r\n      encode: async (text) => {\r\n        // Convert text to Uint8Array\r\n        const textBytes = new TextEncoder().encode(text);\r\n        \r\n        // Allocate memory for the text\r\n        const textPtr = exports.allocateMemory(textBytes.length);\r\n        \r\n        // Copy text to WASM memory\r\n        memoryView.set(textBytes, textPtr);\r\n        \r\n        // Call WASM tokenize function\r\n        const resultPtr = exports.tokenize(modelId, textPtr, textBytes.length);\r\n        \r\n        // Read result from memory\r\n        const resultView = new DataView(memory.buffer);\r\n        const tokenCount = resultView.getInt32(resultPtr, true);\r\n        const tokensPtr = resultView.getInt32(resultPtr + 4, true);\r\n        \r\n        // Read tokens\r\n        const tokens = [];\r\n        for (let i = 0; i < tokenCount; i++) {\r\n          tokens.push(resultView.getInt32(tokensPtr + i * 4, true));\r\n        }\r\n        \r\n        // Free memory\r\n        exports.freeMemory(textPtr);\r\n        exports.freeMemory(resultPtr);\r\n        \r\n        return tokens;\r\n      },\r\n      \r\n      decode: async (tokens) => {\r\n        // Allocate memory for tokens\r\n        const tokensPtr = exports.allocateMemory(tokens.length * 4);\r\n        \r\n        // Copy tokens to WASM memory\r\n        const tokensView = new Int32Array(memory.buffer, tokensPtr, tokens.length);\r\n        tokens.forEach((token, i) => tokensView[i] = token);\r\n        \r\n        // Call WASM detokenize function\r\n        const resultPtr = exports.detokenize(modelId, tokensPtr, tokens.length);\r\n        \r\n        // Read result\r\n        const resultView = new DataView(memory.buffer);\r\n        const textLength = resultView.getInt32(resultPtr, true);\r\n        const textPtr = resultView.getInt32(resultPtr + 4, true);\r\n        \r\n        // Extract text\r\n        const textBytes = new Uint8Array(memory.buffer, textPtr, textLength);\r\n        const text = new TextDecoder().decode(textBytes);\r\n        \r\n        // Free memory\r\n        exports.freeMemory(tokensPtr);\r\n        exports.freeMemory(resultPtr);\r\n        \r\n        return text;\r\n      },\r\n      \r\n      decodeToken: async (token) => {\r\n        // Allocate memory for token\r\n        const tokenPtr = exports.allocateMemory(4);\r\n        \r\n        // Write token to memory\r\n        const tokenView = new Int32Array(memory.buffer, tokenPtr, 1);\r\n        tokenView[0] = token;\r\n        \r\n        // Call WASM detokenize function for single token\r\n        const resultPtr = exports.detokenize(modelId, tokenPtr, 1);\r\n        \r\n        // Read result\r\n        const resultView = new DataView(memory.buffer);\r\n        const textLength = resultView.getInt32(resultPtr, true);\r\n        const textPtr = resultView.getInt32(resultPtr + 4, true);\r\n        \r\n        // Extract text\r\n        const textBytes = new Uint8Array(memory.buffer, textPtr, textLength);\r\n        const text = new TextDecoder().decode(textBytes);\r\n        \r\n        // Free memory\r\n        exports.freeMemory(tokenPtr);\r\n        exports.freeMemory(resultPtr);\r\n        \r\n        return text;\r\n      }\r\n    };\r\n    \r\n    // Return session and tokenizer\r\n    return {\r\n      session: { modelId },\r\n      tokenizer\r\n    };\r\n  } catch (error) {\r\n    logger.error(`Failed to initialize model: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Tokenize text with a model\r\n * \r\n * @param {Object} model - The model\r\n * @param {string} text - Text to tokenize\r\n * @returns {Promise<number[]>} Array of token IDs\r\n */\r\nasync function tokenize(model, text) {\r\n  if (!model.tokenizer) {\r\n    throw new Error('Model tokenizer not initialized');\r\n  }\r\n  \r\n  return model.tokenizer.encode(text);\r\n}\r\n\r\n/**\r\n * Detokenize tokens to text\r\n * \r\n * @param {Object} model - The model\r\n * @param {number[]} tokens - Tokens to detokenize\r\n * @returns {Promise<string>} Detokenized text\r\n */\r\nasync function detokenize(model, tokens) {\r\n  if (!model.tokenizer) {\r\n    throw new Error('Model tokenizer not initialized');\r\n  }\r\n  \r\n  return model.tokenizer.decode(tokens);\r\n}\r\n\r\n/**\r\n * Detokenize a single token\r\n * \r\n * @param {Object} model - The model\r\n * @param {number} token - Token to detokenize\r\n * @returns {Promise<string>} Detokenized token\r\n */\r\nasync function detokenizeToken(model, token) {\r\n  if (!model.tokenizer) {\r\n    throw new Error('Model tokenizer not initialized');\r\n  }\r\n  \r\n  return model.tokenizer.decodeToken(token);\r\n}\r\n\r\n/**\r\n * Run inference with a model\r\n * \r\n * @param {Object} model - The model\r\n * @param {Object} context - The context containing tokens\r\n * @param {Object} options - Generation options\r\n * @param {Function} isCancelled - Function to check if generation is cancelled\r\n * @returns {Promise<number[]>} Generated tokens\r\n */\r\nasync function runInference(model, context, options, isCancelled) {\r\n  if (!isInitialized || !wasmInstance) {\r\n    throw new Error('WASM not initialized');\r\n  }\r\n  \r\n  const exports = wasmInstance.exports;\r\n  const { modelId } = model.session;\r\n  \r\n  try {\r\n    // Get input tokens\r\n    const inputTokens = context.tokens;\r\n    \r\n    // Allocate memory for input tokens\r\n    const inputPtr = exports.allocateMemory(inputTokens.length * 4);\r\n    \r\n    // Copy input tokens to WASM memory\r\n    const inputView = new Int32Array(exports.memory.buffer, inputPtr, inputTokens.length);\r\n    inputTokens.forEach((token, i) => inputView[i] = token);\r\n    \r\n    // Prepare generation parameters\r\n    const paramsPtr = exports.allocateMemory(40);  // Enough for all parameters\r\n    const paramsView = new DataView(exports.memory.buffer, paramsPtr);\r\n    \r\n    let offset = 0;\r\n    paramsView.setInt32(offset, options.maxTokens || 100, true); offset += 4;\r\n    paramsView.setFloat32(offset, options.temperature || 0.7, true); offset += 4;\r\n    paramsView.setFloat32(offset, options.topP || 0.9, true); offset += 4;\r\n    paramsView.setInt32(offset, options.topK || 40, true); offset += 4;\r\n    paramsView.setFloat32(offset, options.repetitionPenalty || 1.1, true); offset += 4;\r\n    paramsView.setInt32(offset, options.seed || Math.floor(Math.random() * 4294967295), true);\r\n    \r\n    // Call WASM inference function\r\n    const resultPtr = exports.generateText(\r\n      modelId,\r\n      inputPtr,\r\n      inputTokens.length,\r\n      paramsPtr\r\n    );\r\n    \r\n    // Check for cancellation between batches\r\n    const checkCancellation = () => {\r\n      if (isCancelled && isCancelled()) {\r\n        // Call WASM function to cancel generation\r\n        exports.cancelGeneration(modelId);\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    \r\n    // Poll for results\r\n    let completed = false;\r\n    const outputTokens = [];\r\n    \r\n    while (!completed && !checkCancellation()) {\r\n      // Check generation status\r\n      const status = exports.getGenerationStatus(modelId);\r\n      \r\n      if (status === 0) {\r\n        // Still generating, wait a bit\r\n        await new Promise(resolve => setTimeout(resolve, 10));\r\n        continue;\r\n      } else if (status === 1) {\r\n        // Generation complete\r\n        completed = true;\r\n        \r\n        // Read result tokens\r\n        const resultView = new DataView(exports.memory.buffer);\r\n        const tokenCount = resultView.getInt32(resultPtr, true);\r\n        const tokensPtr = resultView.getInt32(resultPtr + 4, true);\r\n        \r\n        // Extract tokens\r\n        const tokenView = new Int32Array(exports.memory.buffer, tokensPtr, tokenCount);\r\n        for (let i = 0; i < tokenCount; i++) {\r\n          outputTokens.push(tokenView[i]);\r\n        }\r\n        \r\n        // Free memory\r\n        exports.freeMemory(inputPtr);\r\n        exports.freeMemory(paramsPtr);\r\n        exports.freeMemory(resultPtr);\r\n      } else {\r\n        // Error\r\n        exports.freeMemory(inputPtr);\r\n        exports.freeMemory(paramsPtr);\r\n        throw new Error(`Generation failed with status code ${status}`);\r\n      }\r\n    }\r\n    \r\n    return outputTokens;\r\n  } catch (error) {\r\n    logger.error(`Inference error: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Run streaming inference with a model\r\n * \r\n * @param {Object} model - The model\r\n * @param {Object} context - The context containing tokens\r\n * @param {Function} onToken - Callback for each generated token\r\n * @param {Object} options - Generation options\r\n * @param {Function} isCancelled - Function to check if generation is cancelled\r\n * @returns {Promise<void>}\r\n */\r\nasync function runInferenceStreaming(model, context, onToken, options, isCancelled) {\r\n  if (!isInitialized || !wasmInstance) {\r\n    throw new Error('WASM not initialized');\r\n  }\r\n  \r\n  const exports = wasmInstance.exports;\r\n  const { modelId } = model.session;\r\n  \r\n  try {\r\n    // Similar setup as runInference\r\n    const inputTokens = context.tokens;\r\n    const inputPtr = exports.allocateMemory(inputTokens.length * 4);\r\n    const inputView = new Int32Array(exports.memory.buffer, inputPtr, inputTokens.length);\r\n    inputTokens.forEach((token, i) => inputView[i] = token);\r\n    \r\n    // Prepare parameters\r\n    const paramsPtr = exports.allocateMemory(40);\r\n    const paramsView = new DataView(exports.memory.buffer, paramsPtr);\r\n    \r\n    let offset = 0;\r\n    paramsView.setInt32(offset, options.maxTokens || 100, true); offset += 4;\r\n    paramsView.setFloat32(offset, options.temperature || 0.7, true); offset += 4;\r\n    paramsView.setFloat32(offset, options.topP || 0.9, true); offset += 4;\r\n    paramsView.setInt32(offset, options.topK || 40, true); offset += 4;\r\n    paramsView.setFloat32(offset, options.repetitionPenalty || 1.1, true); offset += 4;\r\n    paramsView.setInt32(offset, options.seed || Math.floor(Math.random() * 4294967295), true); offset += 4;\r\n    paramsView.setInt32(offset, 1, true); // streaming flag\r\n    \r\n    // Start streaming generation\r\n    exports.startStreamingGeneration(modelId, inputPtr, inputTokens.length, paramsPtr);\r\n    \r\n    // Poll for tokens\r\n    while (true) {\r\n      // Check for cancellation\r\n      if (isCancelled && isCancelled()) {\r\n        exports.cancelGeneration(modelId);\r\n        break;\r\n      }\r\n      \r\n      // Check for new token\r\n      const tokenPtr = exports.getNextToken(modelId);\r\n      \r\n      if (tokenPtr === 0) {\r\n        // No token available yet, wait a bit\r\n        await new Promise(resolve => setTimeout(resolve, 10));\r\n        continue;\r\n      } else if (tokenPtr === -1) {\r\n        // End of generation\r\n        break;\r\n      } else {\r\n        // Got a token, read it\r\n        const token = new DataView(exports.memory.buffer).getInt32(tokenPtr, true);\r\n        \r\n        // Detokenize and call callback\r\n        const tokenText = await detokenizeToken(model, token);\r\n        await onToken(token);\r\n        \r\n        // Free token memory\r\n        exports.freeMemory(tokenPtr);\r\n      }\r\n    }\r\n    \r\n    // Clean up\r\n    exports.freeMemory(inputPtr);\r\n    exports.freeMemory(paramsPtr);\r\n  } catch (error) {\r\n    logger.error(`Streaming inference error: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Free resources used by a model\r\n * \r\n * @param {Object} model - The model to free\r\n */\r\nfunction freeModel(model) {\r\n  if (!isInitialized || !wasmInstance || !model.session) {\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    const { modelId } = model.session;\r\n    wasmInstance.exports.freeModel(modelId);\r\n    logger.info(`Model resources freed: ${modelId}`);\r\n  } catch (error) {\r\n    logger.error(`Error freeing model: ${error.message}`);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  initializeWasm,\r\n  initializeModel,\r\n  tokenize,\r\n  detokenize,\r\n  detokenizeToken,\r\n  runInference,\r\n  runInferenceStreaming,\r\n  freeModel\r\n};","/**\r\n * React hooks and utilities for GGUF models\r\n * @module adapters/react\r\n */\r\n\r\n// Check if React is available in the environment\r\nconst hasReact = typeof window !== 'undefined' && \r\n                 (typeof window.React !== 'undefined' || \r\n                  typeof require === 'function' && (() => {\r\n                    try { require('react'); return true; } \r\n                    catch { return false; }\r\n                  })());\r\n\r\n// Import React if available\r\nlet React;\r\nif (hasReact) {\r\n  try {\r\n    React = typeof window !== 'undefined' && window.React ? \r\n            window.React : require('react');\r\n  } catch (error) {\r\n    console.warn('React not found, hooks will not function properly');\r\n  }\r\n}\r\n\r\nconst { GGUFModel } = require('../core/model');\r\nconst loader = require('../core/loader');\r\nconst inference = require('../core/inference');\r\nconst logger = require('../utils/logger');\r\n\r\n/**\r\n * Use state in a React hook or plain object fallback\r\n * \r\n * @param {any} initialValue - Initial state value\r\n * @returns {Array} [value, setValue]\r\n */\r\nfunction useState(initialValue) {\r\n  if (React && React.useState) {\r\n    return React.useState(initialValue);\r\n  } else {\r\n    // Fallback implementation for non-React environments\r\n    let value = initialValue;\r\n    const setValue = (newValue) => {\r\n      if (typeof newValue === 'function') {\r\n        value = newValue(value);\r\n      } else {\r\n        value = newValue;\r\n      }\r\n    };\r\n    return [value, setValue];\r\n  }\r\n}\r\n\r\n/**\r\n * Use effect in a React hook or plain function fallback\r\n * \r\n * @param {Function} effect - Effect function\r\n * @param {Array} deps - Dependencies array\r\n */\r\nfunction useEffect(effect, deps) {\r\n  if (React && React.useEffect) {\r\n    return React.useEffect(effect, deps);\r\n  } else {\r\n    // Fallback implementation for non-React environments\r\n    // Call effect immediately for non-React environment\r\n    const cleanup = effect();\r\n    \r\n    // Return cleanup function if provided\r\n    return cleanup;\r\n  }\r\n}\r\n\r\n/**\r\n * Use callback in a React hook or plain function fallback\r\n * \r\n * @param {Function} callback - Callback function\r\n * @param {Array} deps - Dependencies array\r\n * @returns {Function} Memoized callback\r\n */\r\nfunction useCallback(callback, deps) {\r\n  if (React && React.useCallback) {\r\n    return React.useCallback(callback, deps);\r\n  } else {\r\n    // Fallback implementation for non-React environments\r\n    return callback;\r\n  }\r\n}\r\n\r\n/**\r\n * Use ref in a React hook or plain object fallback\r\n * \r\n * @param {any} initialValue - Initial ref value\r\n * @returns {Object} Ref object\r\n */\r\nfunction useRef(initialValue) {\r\n  if (React && React.useRef) {\r\n    return React.useRef(initialValue);\r\n  } else {\r\n    // Fallback implementation for non-React environments\r\n    return { current: initialValue };\r\n  }\r\n}\r\n\r\n/**\r\n * Hook to load and manage a GGUF model\r\n * \r\n * @param {Object} adapter - Environment adapter\r\n * @param {Object} [options={}] - Hook options\r\n * @returns {Object} Model state and functions\r\n */\r\nfunction useModel(adapter, options = {}) {\r\n  const [model, setModel] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load a model\r\n  const loadModel = useCallback(async (path, loadOptions = {}) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const loadedModel = await loader.loadModel(path, loadOptions, adapter);\r\n      setModel(loadedModel);\r\n      return loadedModel;\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : String(err);\r\n      setError(message);\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [adapter]);\r\n  \r\n  // Unload the current model\r\n  const unloadModel = useCallback(async () => {\r\n    if (model) {\r\n      try {\r\n        await loader.unloadModel(model.id, adapter);\r\n        setModel(null);\r\n        return true;\r\n      } catch (err) {\r\n        const message = err instanceof Error ? err.message : String(err);\r\n        setError(message);\r\n        throw err;\r\n      }\r\n    }\r\n    return false;\r\n  }, [model, adapter]);\r\n  \r\n  // Discover models in a directory (Node.js only)\r\n  const discoverModels = useCallback(async (directory) => {\r\n    if (!adapter.discoverModels) {\r\n      setError('Model discovery not supported in this environment');\r\n      return [];\r\n    }\r\n    \r\n    try {\r\n      return await adapter.discoverModels(directory);\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : String(err);\r\n      setError(message);\r\n      throw err;\r\n    }\r\n  }, [adapter]);\r\n  \r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (model && model.id) {\r\n        // Try to unload the model on unmount\r\n        try {\r\n          loader.unloadModel(model.id, adapter);\r\n        } catch (err) {\r\n          logger.warn(`Failed to unload model on unmount: ${err.message}`);\r\n        }\r\n      }\r\n    };\r\n  }, [model, adapter]);\r\n  \r\n  return {\r\n    model,\r\n    isLoading,\r\n    error,\r\n    loadModel,\r\n    unloadModel,\r\n    discoverModels\r\n  };\r\n}\r\n\r\n/**\r\n * Hook for text generation\r\n * \r\n * @param {Object} adapter - Environment adapter\r\n * @param {Object} [options={}] - Hook options\r\n * @returns {Object} Generation state and functions\r\n */\r\nfunction useGeneration(adapter, options = {}) {\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [output, setOutput] = useState('');\r\n  const isCancelled = useRef(false);\r\n  \r\n  // Generate text\r\n  const generate = useCallback(async (model, prompt, genOptions = {}) => {\r\n    if (!model || !model.isLoaded) {\r\n      const error = new Error('Model not loaded properly');\r\n      setError(error.message);\r\n      throw error;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    setError(null);\r\n    setOutput('');\r\n    isCancelled.current = false;\r\n    \r\n    try {\r\n      const response = await inference.generate(\r\n        model, \r\n        prompt, \r\n        genOptions, \r\n        adapter, \r\n        () => isCancelled.current\r\n      );\r\n      \r\n      setOutput(response);\r\n      return response;\r\n    } catch (err) {\r\n      if (!isCancelled.current) {\r\n        const message = err instanceof Error ? err.message : String(err);\r\n        setError(message);\r\n        throw err;\r\n      }\r\n      return '';\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  }, [adapter]);\r\n  \r\n  // Stream generation\r\n  const streamGenerate = useCallback(async (model, prompt, onToken, genOptions = {}) => {\r\n    if (!model || !model.isLoaded) {\r\n      const error = new Error('Model not loaded properly');\r\n      setError(error.message);\r\n      throw error;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    setError(null);\r\n    setOutput('');\r\n    isCancelled.current = false;\r\n    \r\n    let fullOutput = '';\r\n    \r\n    // Create a wrapped onToken function that builds the full output\r\n    const wrappedOnToken = (token, isDone) => {\r\n      if (!isCancelled.current) {\r\n        fullOutput += token;\r\n        setOutput(fullOutput);\r\n        onToken(token, isDone);\r\n      }\r\n    };\r\n    \r\n    try {\r\n      await inference.streamGenerate(\r\n        model, \r\n        prompt, \r\n        wrappedOnToken, \r\n        genOptions, \r\n        adapter, \r\n        () => isCancelled.current\r\n      );\r\n      \r\n      return fullOutput;\r\n    } catch (err) {\r\n      if (!isCancelled.current) {\r\n        const message = err instanceof Error ? err.message : String(err);\r\n        setError(message);\r\n        throw err;\r\n      }\r\n      return fullOutput;\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  }, [adapter]);\r\n  \r\n  // Cancel generation\r\n  const cancelGeneration = useCallback(() => {\r\n    isCancelled.current = true;\r\n    setIsGenerating(false);\r\n    return true;\r\n  }, []);\r\n  \r\n  return {\r\n    isGenerating,\r\n    error,\r\n    output,\r\n    generate,\r\n    streamGenerate,\r\n    cancelGeneration\r\n  };\r\n}\r\n\r\n/**\r\n * Hook for chat conversation state management\r\n * \r\n * @param {Object} adapter - Environment adapter\r\n * @param {Object} [options={}] - Hook options\r\n * @returns {Object} Chat state and functions\r\n */\r\nfunction useChat(adapter, options = {}) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Add a user message\r\n  const addUserMessage = useCallback((content) => {\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      role: 'user',\r\n      content,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    return userMessage;\r\n  }, []);\r\n  \r\n  // Add an assistant message\r\n  const addAssistantMessage = useCallback((content) => {\r\n    const assistantMessage = {\r\n      id: Date.now(),\r\n      role: 'assistant',\r\n      content,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, assistantMessage]);\r\n    return assistantMessage;\r\n  }, []);\r\n  \r\n  // Format messages into a prompt\r\n  const formatPrompt = useCallback((systemPrompt) => {\r\n    let prompt = '';\r\n    \r\n    // Add system prompt if provided\r\n    if (systemPrompt) {\r\n      prompt += `System: ${systemPrompt}\\n\\n`;\r\n    }\r\n    \r\n    // Add conversation history\r\n    for (const message of messages) {\r\n      if (message.role === 'user') {\r\n        prompt += `User: ${message.content}\\n\\n`;\r\n      } else if (message.role === 'assistant') {\r\n        prompt += `Assistant: ${message.content}\\n\\n`;\r\n      } else if (message.role === 'system') {\r\n        prompt += `System: ${message.content}\\n\\n`;\r\n      }\r\n    }\r\n    \r\n    // Add assistant prompt\r\n    prompt += 'Assistant: ';\r\n    \r\n    return prompt;\r\n  }, [messages]);\r\n  \r\n  // Generate a response\r\n  const generateResponse = useCallback(async (\r\n    model, \r\n    systemPrompt = '',\r\n    genOptions = {}\r\n  ) => {\r\n    if (!model || !model.isLoaded) {\r\n      const error = new Error('Model not loaded properly');\r\n      setError(error.message);\r\n      throw error;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Format the conversation into a prompt\r\n      const prompt = formatPrompt(systemPrompt);\r\n      \r\n      // Generate a response\r\n      const response = await inference.generate(\r\n        model,\r\n        prompt,\r\n        genOptions,\r\n        adapter\r\n      );\r\n      \r\n      // Add the response to the conversation\r\n      addAssistantMessage(response);\r\n      \r\n      return response;\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : String(err);\r\n      setError(message);\r\n      throw err;\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  }, [formatPrompt, addAssistantMessage, adapter]);\r\n  \r\n  // Stream a response\r\n  const streamResponse = useCallback(async (\r\n    model,\r\n    onToken,\r\n    systemPrompt = '',\r\n    genOptions = {}\r\n  ) => {\r\n    if (!model || !model.isLoaded) {\r\n      const error = new Error('Model not loaded properly');\r\n      setError(error.message);\r\n      throw error;\r\n    }\r\n    \r\n    setIsGenerating(true);\r\n    setError(null);\r\n    \r\n    // Create a placeholder for the assistant message\r\n    const assistantMessage = {\r\n      id: Date.now(),\r\n      role: 'assistant',\r\n      content: '',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, assistantMessage]);\r\n    \r\n    let fullResponse = '';\r\n    \r\n    // Create a wrapped token handler that updates the message\r\n    const wrappedOnToken = (token, isDone) => {\r\n      if (!isDone) {\r\n        fullResponse += token;\r\n        \r\n        // Update the assistant message\r\n        setMessages(prevMessages => {\r\n          const updatedMessages = [...prevMessages];\r\n          const lastIndex = updatedMessages.length - 1;\r\n          \r\n          if (lastIndex >= 0 && updatedMessages[lastIndex].id === assistantMessage.id) {\r\n            updatedMessages[lastIndex] = {\r\n              ...updatedMessages[lastIndex],\r\n              content: fullResponse\r\n            };\r\n          }\r\n          \r\n          return updatedMessages;\r\n        });\r\n        \r\n        // Call the original callback\r\n        onToken(token, isDone);\r\n      } else {\r\n        onToken('', true);\r\n      }\r\n    };\r\n    \r\n    try {\r\n      // Format the conversation into a prompt\r\n      const prompt = formatPrompt(systemPrompt);\r\n      \r\n      // Generate a streaming response\r\n      await inference.streamGenerate(\r\n        model,\r\n        prompt,\r\n        wrappedOnToken,\r\n        genOptions,\r\n        adapter\r\n      );\r\n      \r\n      return fullResponse;\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : String(err);\r\n      setError(message);\r\n      throw err;\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  }, [formatPrompt, adapter]);\r\n  \r\n  // Clear all messages\r\n  const clearMessages = useCallback(() => {\r\n    setMessages([]);\r\n  }, []);\r\n  \r\n  return {\r\n    messages,\r\n    isGenerating,\r\n    error,\r\n    addUserMessage,\r\n    addAssistantMessage,\r\n    generateResponse,\r\n    streamResponse,\r\n    clearMessages,\r\n    formatPrompt\r\n  };\r\n}\r\n\r\n/**\r\n * Create a React context provider for GGUF models\r\n * Only available when React is present\r\n * \r\n * @param {Object} adapter - Environment adapter\r\n * @returns {Object} Context provider and hooks\r\n */\r\nfunction createGGUFContext(adapter) {\r\n  if (!React) {\r\n    throw new Error('React is required to create a context provider');\r\n  }\r\n  \r\n  // Create contexts\r\n  const ModelContext = React.createContext(null);\r\n  const GenerationContext = React.createContext(null);\r\n  \r\n  // Provider component\r\n  const GGUFProvider = ({ children, initialOptions = {} }) => {\r\n    const modelState = useModel(adapter, initialOptions);\r\n    const generationState = useGeneration(adapter, initialOptions);\r\n    \r\n    // Use React.createElement instead of JSX\r\n    return React.createElement(\r\n      ModelContext.Provider,\r\n      { value: modelState },\r\n      React.createElement(\r\n        GenerationContext.Provider,\r\n        { value: generationState },\r\n        children\r\n      )\r\n    );\r\n  };\r\n  \r\n  // Custom hooks to use the contexts\r\n  const useGGUFModel = () => {\r\n    const context = React.useContext(ModelContext);\r\n    if (!context) {\r\n      throw new Error('useGGUFModel must be used within a GGUFProvider');\r\n    }\r\n    return context;\r\n  };\r\n  \r\n  const useGGUFGeneration = () => {\r\n    const context = React.useContext(GenerationContext);\r\n    if (!context) {\r\n      throw new Error('useGGUFGeneration must be used within a GGUFProvider');\r\n    }\r\n    return context;\r\n  };\r\n  \r\n  return {\r\n    GGUFProvider,\r\n    useGGUFModel,\r\n    useGGUFGeneration\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  // Core hooks\r\n  useModel,\r\n  useGeneration,\r\n  useChat,\r\n  \r\n  // React context utilities (only available when React is present)\r\n  createGGUFContext: hasReact ? createGGUFContext : undefined,\r\n  \r\n  // Expose React wrappers for testing\r\n  _react: {\r\n    useState,\r\n    useEffect,\r\n    useCallback,\r\n    useRef\r\n  }\r\n};","/**\r\n * Memory management utilities for GGUF.js\r\n * @module utils/memory\r\n */\r\n\r\nconst logger = require('./logger');\r\n\r\n/**\r\n * Memory allocation record\r\n * @typedef {Object} AllocationRecord\r\n * @property {string} id - Unique identifier\r\n * @property {number} size - Size in bytes\r\n * @property {string} [type] - Allocation type\r\n * @property {number} timestamp - Allocation timestamp\r\n * @property {string} [description] - Description\r\n */\r\n\r\n/**\r\n * Memory usage stats\r\n * @typedef {Object} MemoryStats\r\n * @property {number} allocated - Total bytes allocated\r\n * @property {number} freed - Total bytes freed\r\n * @property {number} active - Active bytes (allocated - freed)\r\n * @property {number} peak - Peak memory usage\r\n * @property {number} allocations - Number of allocations\r\n * @property {number} frees - Number of frees\r\n */\r\n\r\n/**\r\n * Memory manager class for tracking and optimizing memory usage\r\n */\r\nclass MemoryManager {\r\n  constructor() {\r\n    /**\r\n     * Map of active allocations\r\n     * @type {Map<string, AllocationRecord>}\r\n     */\r\n    this.allocations = new Map();\r\n    \r\n    /**\r\n     * Allocation counter for generating IDs\r\n     * @type {number}\r\n     */\r\n    this.counter = 0;\r\n    \r\n    /**\r\n     * Memory usage statistics\r\n     * @type {MemoryStats}\r\n     */\r\n    this.stats = {\r\n      allocated: 0,\r\n      freed: 0,\r\n      active: 0,\r\n      peak: 0,\r\n      allocations: 0,\r\n      frees: 0\r\n    };\r\n    \r\n    // Set up automatic browser memory stats if available\r\n    if (typeof window !== 'undefined' && \r\n        window.performance && \r\n        'memory' in window.performance) {\r\n      this.hasBrowserMemoryStats = true;\r\n    } else {\r\n      this.hasBrowserMemoryStats = false;\r\n    }\r\n    \r\n    // Set up automatic Node.js memory stats if available\r\n    if (typeof process !== 'undefined' && \r\n        process.memoryUsage) {\r\n      this.hasNodeMemoryStats = true;\r\n    } else {\r\n      this.hasNodeMemoryStats = false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Track a memory allocation\r\n   * @param {number} size - Size in bytes\r\n   * @param {Object} [options] - Allocation options\r\n   * @param {string} [options.type] - Allocation type\r\n   * @param {string} [options.description] - Allocation description\r\n   * @returns {string} Allocation ID\r\n   */\r\n  allocate(size, { type, description } = {}) {\r\n    const id = `alloc_${++this.counter}`;\r\n    \r\n    // Create allocation record\r\n    const record = {\r\n      id,\r\n      size,\r\n      type: type || 'unknown',\r\n      timestamp: Date.now(),\r\n      description: description || ''\r\n    };\r\n    \r\n    // Store the allocation\r\n    this.allocations.set(id, record);\r\n    \r\n    // Update stats\r\n    this.stats.allocated += size;\r\n    this.stats.active += size;\r\n    this.stats.allocations++;\r\n    \r\n    // Update peak usage\r\n    if (this.stats.active > this.stats.peak) {\r\n      this.stats.peak = this.stats.active;\r\n    }\r\n    \r\n    logger.debug(`Memory allocated: ${formatBytes(size)} (${type || 'unknown'})${description ? ` - ${description}` : ''}`);\r\n    \r\n    return id;\r\n  }\r\n  \r\n  /**\r\n   * Track a memory deallocation\r\n   * @param {string} id - Allocation ID to free\r\n   * @returns {boolean} Whether the allocation was found and freed\r\n   */\r\n  free(id) {\r\n    // Find the allocation\r\n    const allocation = this.allocations.get(id);\r\n    \r\n    if (!allocation) {\r\n      logger.warn(`Attempted to free unknown allocation: ${id}`);\r\n      return false;\r\n    }\r\n    \r\n    // Update stats\r\n    this.stats.freed += allocation.size;\r\n    this.stats.active -= allocation.size;\r\n    this.stats.frees++;\r\n    \r\n    // Remove the allocation\r\n    this.allocations.delete(id);\r\n    \r\n    logger.debug(`Memory freed: ${formatBytes(allocation.size)} (${allocation.type})${allocation.description ? ` - ${allocation.description}` : ''}`);\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Free all tracked allocations\r\n   * @returns {number} Number of allocations freed\r\n   */\r\n  freeAll() {\r\n    const count = this.allocations.size;\r\n    \r\n    if (count === 0) {\r\n      return 0;\r\n    }\r\n    \r\n    logger.info(`Freeing all ${count} memory allocations (${formatBytes(this.stats.active)})`);\r\n    \r\n    const allocationIds = Array.from(this.allocations.keys());\r\n    for (const id of allocationIds) {\r\n      this.free(id);\r\n    }\r\n    \r\n    return count;\r\n  }\r\n  \r\n  /**\r\n   * Free allocations of a specific type\r\n   * @param {string} type - Allocation type to free\r\n   * @returns {number} Number of allocations freed\r\n   */\r\n  freeByType(type) {\r\n    let count = 0;\r\n    \r\n    const typeAllocations = Array.from(this.allocations.values())\r\n      .filter(allocation => allocation.type === type);\r\n    \r\n    logger.info(`Freeing ${typeAllocations.length} '${type}' allocations`);\r\n    \r\n    for (const allocation of typeAllocations) {\r\n      if (this.free(allocation.id)) {\r\n        count++;\r\n      }\r\n    }\r\n    \r\n    return count;\r\n  }\r\n  \r\n  /**\r\n   * Get current memory usage statistics\r\n   * @returns {Object} Memory stats\r\n   */\r\n  getStats() {\r\n    // Start with tracked stats\r\n    const stats = {\r\n      ...this.stats,\r\n      // Add user-friendly formatted values\r\n      allocatedFormatted: formatBytes(this.stats.allocated),\r\n      freedFormatted: formatBytes(this.stats.freed),\r\n      activeFormatted: formatBytes(this.stats.active),\r\n      peakFormatted: formatBytes(this.stats.peak),\r\n      activeAllocations: this.allocations.size\r\n    };\r\n    \r\n    // Add browser memory stats if available\r\n    if (this.hasBrowserMemoryStats) {\r\n      const memory = window.performance.memory;\r\n      stats.browser = {\r\n        totalJSHeapSize: memory.totalJSHeapSize,\r\n        usedJSHeapSize: memory.usedJSHeapSize,\r\n        jsHeapSizeLimit: memory.jsHeapSizeLimit,\r\n        totalJSHeapSizeFormatted: formatBytes(memory.totalJSHeapSize),\r\n        usedJSHeapSizeFormatted: formatBytes(memory.usedJSHeapSize),\r\n        jsHeapSizeLimitFormatted: formatBytes(memory.jsHeapSizeLimit)\r\n      };\r\n    }\r\n    \r\n    // Add Node.js memory stats if available\r\n    if (this.hasNodeMemoryStats) {\r\n      const memory = process.memoryUsage();\r\n      stats.node = {\r\n        rss: memory.rss,\r\n        heapTotal: memory.heapTotal,\r\n        heapUsed: memory.heapUsed,\r\n        external: memory.external,\r\n        arrayBuffers: memory.arrayBuffers,\r\n        rssFormatted: formatBytes(memory.rss),\r\n        heapTotalFormatted: formatBytes(memory.heapTotal),\r\n        heapUsedFormatted: formatBytes(memory.heapUsed),\r\n        externalFormatted: formatBytes(memory.external),\r\n        arrayBuffersFormatted: formatBytes(memory.arrayBuffers)\r\n      };\r\n    }\r\n    \r\n    return stats;\r\n  }\r\n  \r\n  /**\r\n   * Get current allocations\r\n   * @returns {AllocationRecord[]} Array of allocations\r\n   */\r\n  getAllocations() {\r\n    return Array.from(this.allocations.values());\r\n  }\r\n  \r\n  /**\r\n   * Get allocations grouped by type\r\n   * @returns {Object} Allocations grouped by type\r\n   */\r\n  getAllocationsByType() {\r\n    const byType = {};\r\n    \r\n    for (const allocation of this.allocations.values()) {\r\n      const type = allocation.type || 'unknown';\r\n      \r\n      if (!byType[type]) {\r\n        byType[type] = {\r\n          count: 0,\r\n          size: 0,\r\n          allocations: []\r\n        };\r\n      }\r\n      \r\n      byType[type].count++;\r\n      byType[type].size += allocation.size;\r\n      byType[type].allocations.push(allocation);\r\n    }\r\n    \r\n    // Add formatted sizes\r\n    for (const type in byType) {\r\n      byType[type].sizeFormatted = formatBytes(byType[type].size);\r\n    }\r\n    \r\n    return byType;\r\n  }\r\n  \r\n  /**\r\n   * Log memory usage information\r\n   * @param {boolean} [detailed=false] - Whether to include detailed allocation info\r\n   */\r\n  logMemoryUsage(detailed = false) {\r\n    const stats = this.getStats();\r\n    \r\n    logger.info('Memory Usage Summary:');\r\n    logger.info(`  Total Allocated: ${stats.allocatedFormatted}`);\r\n    logger.info(`  Total Freed: ${stats.freedFormatted}`);\r\n    logger.info(`  Active: ${stats.activeFormatted}`);\r\n    logger.info(`  Peak: ${stats.peakFormatted}`);\r\n    logger.info(`  Allocations: ${stats.allocations}`);\r\n    logger.info(`  Frees: ${stats.frees}`);\r\n    logger.info(`  Active Allocations: ${stats.activeAllocations}`);\r\n    \r\n    // Log browser memory if available\r\n    if (stats.browser) {\r\n      logger.info('Browser Memory:');\r\n      logger.info(`  Used JS Heap: ${stats.browser.usedJSHeapSizeFormatted}`);\r\n      logger.info(`  Total JS Heap: ${stats.browser.totalJSHeapSizeFormatted}`);\r\n      logger.info(`  JS Heap Limit: ${stats.browser.jsHeapSizeLimitFormatted}`);\r\n    }\r\n    \r\n    // Log Node.js memory if available\r\n    if (stats.node) {\r\n      logger.info('Node.js Memory:');\r\n      logger.info(`  RSS: ${stats.node.rssFormatted}`);\r\n      logger.info(`  Heap Total: ${stats.node.heapTotalFormatted}`);\r\n      logger.info(`  Heap Used: ${stats.node.heapUsedFormatted}`);\r\n      logger.info(`  External: ${stats.node.externalFormatted}`);\r\n      logger.info(`  Array Buffers: ${stats.node.arrayBuffersFormatted}`);\r\n    }\r\n    \r\n    // Log detailed allocation info if requested\r\n    if (detailed) {\r\n      const byType = this.getAllocationsByType();\r\n      \r\n      logger.info('Allocations by Type:');\r\n      for (const type in byType) {\r\n        logger.info(`  ${type}: ${byType[type].count} allocations, ${byType[type].sizeFormatted}`);\r\n      }\r\n      \r\n      if (detailed === 'full') {\r\n        logger.info('All Allocations:');\r\n        for (const allocation of this.allocations.values()) {\r\n          logger.info(`  ${allocation.id}: ${formatBytes(allocation.size)} (${allocation.type})${allocation.description ? ` - ${allocation.description}` : ''}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Reset memory tracking stats (but keep allocations)\r\n   */\r\n  resetStats() {\r\n    // Calculate current active memory\r\n    const active = this.stats.allocated - this.stats.freed;\r\n    \r\n    // Reset stats but keep active memory\r\n    this.stats = {\r\n      allocated: active,\r\n      freed: 0,\r\n      active,\r\n      peak: active,\r\n      allocations: this.allocations.size,\r\n      frees: 0\r\n    };\r\n    \r\n    logger.debug('Memory stats reset');\r\n  }\r\n}\r\n\r\n/**\r\n * Format bytes to human-readable string\r\n * @param {number} bytes - Bytes to format\r\n * @param {number} [decimals=2] - Number of decimal places\r\n * @returns {string} Formatted string\r\n */\r\nfunction formatBytes(bytes, decimals = 2) {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n  \r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\r\n}\r\n\r\n/**\r\n * Create a function wrapper that tracks memory usage\r\n * @param {Function} fn - Function to wrap\r\n * @param {Object} options - Options\r\n * @param {string} [options.type='function'] - Allocation type\r\n * @param {string} [options.description] - Allocation description\r\n * @param {MemoryManager} [options.memoryManager] - Memory manager to use\r\n * @returns {Function} Wrapped function\r\n */\r\nfunction withMemoryTracking(fn, options = {}) {\r\n  const manager = options.memoryManager || globalMemoryManager;\r\n  const type = options.type || 'function';\r\n  const description = options.description || fn.name || 'anonymous function';\r\n  \r\n  return async function(...args) {\r\n    // Track memory before function call\r\n    const beforeStats = manager.getStats();\r\n    \r\n    // Record allocation for function execution\r\n    const id = manager.allocate(0, { \r\n      type, \r\n      description: `Function call: ${description}`\r\n    });\r\n    \r\n    try {\r\n      // Execute the function\r\n      const result = await fn.apply(this, args);\r\n      \r\n      // Calculate memory used\r\n      const afterStats = manager.getStats();\r\n      const memoryUsed = afterStats.active - beforeStats.active;\r\n      \r\n      // Update allocation size\r\n      manager.free(id);\r\n      manager.allocate(memoryUsed, { \r\n        type, \r\n        description: `Result of: ${description}`\r\n      });\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      // Free allocation on error\r\n      manager.free(id);\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Try to trigger garbage collection (only works in debug environments)\r\n * @returns {boolean} Whether GC was triggered\r\n */\r\nfunction triggerGC() {\r\n  if (typeof global !== 'undefined' && global.gc) {\r\n    // Node.js with --expose-gc flag\r\n    global.gc();\r\n    logger.debug('Triggered Node.js garbage collection');\r\n    return true;\r\n  } else if (typeof window !== 'undefined' && window.gc) {\r\n    // Some browsers in debug mode\r\n    window.gc();\r\n    logger.debug('Triggered browser garbage collection');\r\n    return true;\r\n  }\r\n  \r\n  logger.debug('Cannot trigger garbage collection (not available in this environment)');\r\n  return false;\r\n}\r\n\r\n/**\r\n * Create a fixed-size memory pool for reusing allocations\r\n * @param {number} totalSize - Total pool size in bytes\r\n * @returns {Object} Memory pool interface\r\n */\r\nfunction createMemoryPool(totalSize) {\r\n  // Create the underlying buffer\r\n  const buffer = typeof ArrayBuffer !== 'undefined' ? \r\n    new ArrayBuffer(totalSize) : \r\n    Buffer.alloc(totalSize);\r\n  \r\n  // Track allocations\r\n  const allocations = [];\r\n  let freeOffset = 0;\r\n  \r\n  return {\r\n    /**\r\n     * Allocate memory from the pool\r\n     * @param {number} size - Size in bytes\r\n     * @returns {Object} Allocation with buffer view\r\n     */\r\n    allocate(size) {\r\n      if (freeOffset + size > totalSize) {\r\n        throw new Error(`Memory pool out of space (${formatBytes(size)} requested, ${formatBytes(totalSize - freeOffset)} available)`);\r\n      }\r\n      \r\n      const start = freeOffset;\r\n      freeOffset += size;\r\n      \r\n      const view = typeof Uint8Array !== 'undefined' ? \r\n        new Uint8Array(buffer, start, size) : \r\n        Buffer.from(buffer, start, size);\r\n      \r\n      const allocation = { start, size, view };\r\n      allocations.push(allocation);\r\n      \r\n      return allocation;\r\n    },\r\n    \r\n    /**\r\n     * Free a specific allocation\r\n     * @param {Object} allocation - Allocation to free\r\n     * @returns {boolean} Whether the free was successful\r\n     */\r\n    free(allocation) {\r\n      const index = allocations.indexOf(allocation);\r\n      if (index === -1) return false;\r\n      \r\n      // Remove the allocation\r\n      allocations.splice(index, 1);\r\n      \r\n      // This is a simple implementation that doesn't reuse freed space\r\n      // In a real implementation, you'd want to track free blocks and reuse them\r\n      \r\n      return true;\r\n    },\r\n    \r\n    /**\r\n     * Reset the pool (free all allocations)\r\n     */\r\n    reset() {\r\n      allocations.length = 0;\r\n      freeOffset = 0;\r\n    },\r\n    \r\n    /**\r\n     * Get pool usage information\r\n     * @returns {Object} Pool info\r\n     */\r\n    getInfo() {\r\n      return {\r\n        totalSize,\r\n        used: freeOffset,\r\n        free: totalSize - freeOffset,\r\n        allocations: allocations.length,\r\n        usedFormatted: formatBytes(freeOffset),\r\n        freeFormatted: formatBytes(totalSize - freeOffset),\r\n        totalFormatted: formatBytes(totalSize)\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n// Create a global memory manager instance\r\nconst globalMemoryManager = new MemoryManager();\r\n\r\nmodule.exports = {\r\n  MemoryManager,\r\n  formatBytes,\r\n  withMemoryTracking,\r\n  triggerGC,\r\n  createMemoryPool,\r\n  globalMemoryManager\r\n};","/**\r\n * Streaming response utilities for GGUF.js\r\n * @module utils/streaming\r\n */\r\n\r\nconst logger = require('./logger');\r\n\r\n/**\r\n * A token stream implementation for handling sequential tokens\r\n */\r\nclass TokenStream {\r\n  /**\r\n   * Create a token stream\r\n   * @param {Object} options - Stream options\r\n   * @param {number} [options.bufferSize=1024] - Maximum number of tokens to buffer\r\n   * @param {boolean} [options.autoFlush=true] - Whether to auto-flush the buffer when full\r\n   */\r\n  constructor(options = {}) {\r\n    this.buffer = [];\r\n    this.bufferSize = options.bufferSize || 1024;\r\n    this.autoFlush = options.autoFlush !== false;\r\n    this.isEnded = false;\r\n    this.consumers = [];\r\n    this.doneCallbacks = [];\r\n  }\r\n  \r\n  /**\r\n   * Write a token to the stream\r\n   * @param {string|number} token - Token to write\r\n   * @returns {boolean} Whether the write was successful\r\n   */\r\n  write(token) {\r\n    if (this.isEnded) {\r\n      logger.warn('Attempted to write to a closed token stream');\r\n      return false;\r\n    }\r\n    \r\n    // Add token to buffer\r\n    this.buffer.push(token);\r\n    \r\n    // Notify consumers\r\n    this._notifyConsumers();\r\n    \r\n    // Auto-flush if buffer is full\r\n    if (this.autoFlush && this.buffer.length >= this.bufferSize) {\r\n      this.flush();\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Write multiple tokens to the stream\r\n   * @param {Array<string|number>} tokens - Tokens to write\r\n   * @returns {boolean} Whether the write was successful\r\n   */\r\n  writeMany(tokens) {\r\n    if (this.isEnded) {\r\n      logger.warn('Attempted to write to a closed token stream');\r\n      return false;\r\n    }\r\n    \r\n    // Add tokens to buffer\r\n    this.buffer.push(...tokens);\r\n    \r\n    // Notify consumers\r\n    this._notifyConsumers();\r\n    \r\n    // Auto-flush if buffer is full\r\n    if (this.autoFlush && this.buffer.length >= this.bufferSize) {\r\n      this.flush();\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * End the stream (no more tokens will be accepted)\r\n   */\r\n  end() {\r\n    if (this.isEnded) return;\r\n    \r\n    this.isEnded = true;\r\n    this._notifyConsumers();\r\n    \r\n    // Notify all done callbacks\r\n    for (const callback of this.doneCallbacks) {\r\n      try {\r\n        callback();\r\n      } catch (error) {\r\n        logger.error('Error in stream done callback', error);\r\n      }\r\n    }\r\n    this.doneCallbacks = [];\r\n  }\r\n  \r\n  /**\r\n   * Flush the buffer (clear tokens and free memory)\r\n   */\r\n  flush() {\r\n    this.buffer = [];\r\n  }\r\n  \r\n  /**\r\n   * Subscribe to tokens from the stream\r\n   * @param {Function} onToken - Callback for each token\r\n   * @param {Function} [onDone] - Callback when stream is ended\r\n   * @returns {Function} Unsubscribe function\r\n   */\r\n  subscribe(onToken, onDone) {\r\n    const consumer = { onToken };\r\n    this.consumers.push(consumer);\r\n    \r\n    // Add done callback if provided\r\n    if (onDone) {\r\n      this.doneCallbacks.push(onDone);\r\n    }\r\n    \r\n    // Immediately notify of any existing tokens\r\n    if (this.buffer.length > 0) {\r\n      for (const token of this.buffer) {\r\n        try {\r\n          onToken(token, false);\r\n        } catch (error) {\r\n          logger.error('Error in token consumer', error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // If stream is already ended, call onDone immediately\r\n    if (this.isEnded && onDone) {\r\n      try {\r\n        onDone();\r\n      } catch (error) {\r\n        logger.error('Error in stream done callback', error);\r\n      }\r\n    }\r\n    \r\n    // Return unsubscribe function\r\n    return () => {\r\n      this.consumers = this.consumers.filter(c => c !== consumer);\r\n      this.doneCallbacks = this.doneCallbacks.filter(cb => cb !== onDone);\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Read all available tokens\r\n   * @returns {Array} Array of tokens\r\n   */\r\n  read() {\r\n    const tokens = [...this.buffer];\r\n    return tokens;\r\n  }\r\n  \r\n  /**\r\n   * Notify all consumers of new tokens\r\n   * @private\r\n   */\r\n  _notifyConsumers() {\r\n    if (this.consumers.length === 0) return;\r\n    \r\n    while (this.buffer.length > 0) {\r\n      const token = this.buffer.shift();\r\n      \r\n      for (const consumer of this.consumers) {\r\n        try {\r\n          consumer.onToken(token, false);\r\n        } catch (error) {\r\n          logger.error('Error in token consumer', error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // If stream is ended, notify consumers with the final flag\r\n    if (this.isEnded) {\r\n      for (const consumer of this.consumers) {\r\n        try {\r\n          consumer.onToken(null, true);\r\n        } catch (error) {\r\n          logger.error('Error in token consumer', error);\r\n        }\r\n      }\r\n      \r\n      this.consumers = [];\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Check if the stream has ended\r\n   * @returns {boolean} Whether the stream has ended\r\n   */\r\n  isDone() {\r\n    return this.isEnded;\r\n  }\r\n  \r\n  /**\r\n   * Get the number of remaining tokens in the buffer\r\n   * @returns {number} Number of tokens in buffer\r\n   */\r\n  bufferedTokens() {\r\n    return this.buffer.length;\r\n  }\r\n}\r\n\r\n/**\r\n * Create a token stream from an array of tokens\r\n * @param {Array<string|number>} tokens - Tokens to stream\r\n * @param {Object} options - Stream options\r\n * @param {number} [options.delay=0] - Delay between tokens in milliseconds\r\n * @param {boolean} [options.jitter=false] - Whether to add random jitter to delay\r\n * @param {number} [options.maxJitter=10] - Maximum jitter in milliseconds\r\n * @returns {TokenStream} Token stream\r\n */\r\nfunction createTokenStream(tokens, options = {}) {\r\n  const stream = new TokenStream();\r\n  \r\n  if (!tokens || tokens.length === 0) {\r\n    stream.end();\r\n    return stream;\r\n  }\r\n  \r\n  const delay = options.delay || 0;\r\n  const jitter = options.jitter || false;\r\n  const maxJitter = options.maxJitter || 10;\r\n  \r\n  let index = 0;\r\n  \r\n  function processNextToken() {\r\n    if (index >= tokens.length) {\r\n      stream.end();\r\n      return;\r\n    }\r\n    \r\n    stream.write(tokens[index++]);\r\n    \r\n    if (index < tokens.length) {\r\n      let tokenDelay = delay;\r\n      \r\n      // Add jitter if enabled\r\n      if (jitter) {\r\n        tokenDelay += Math.random() * maxJitter * 2 - maxJitter;\r\n        tokenDelay = Math.max(0, tokenDelay);\r\n      }\r\n      \r\n      setTimeout(processNextToken, tokenDelay);\r\n    } else {\r\n      stream.end();\r\n    }\r\n  }\r\n  \r\n  // Start processing tokens\r\n  if (delay > 0) {\r\n    setTimeout(processNextToken, 0);\r\n  } else {\r\n    // Immediate processing for no delay\r\n    stream.writeMany(tokens);\r\n    stream.end();\r\n  }\r\n  \r\n  return stream;\r\n}\r\n\r\n/**\r\n * Collect all tokens from a stream into a single value\r\n * @param {TokenStream} stream - Token stream to collect\r\n * @param {Function} [onProgress] - Callback for progress updates\r\n * @returns {Promise<Array>} Array of all tokens\r\n */\r\nfunction collectStream(stream, onProgress = null) {\r\n  return new Promise((resolve, reject) => {\r\n    const tokens = [];\r\n    \r\n    stream.subscribe(\r\n      (token, isDone) => {\r\n        if (token !== null) {\r\n          tokens.push(token);\r\n          \r\n          if (onProgress) {\r\n            try {\r\n              onProgress(tokens.length, token);\r\n            } catch (error) {\r\n              // Ignore errors in progress callback\r\n            }\r\n          }\r\n        }\r\n        \r\n        if (isDone) {\r\n          resolve(tokens);\r\n        }\r\n      },\r\n      () => resolve(tokens)\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Convert a stream of tokens to a string\r\n * @param {TokenStream} stream - Token stream to collect\r\n * @param {Function} [decoder] - Function to decode tokens to strings\r\n * @param {Function} [onProgress] - Callback for progress updates\r\n * @returns {Promise<string>} Collected string\r\n */\r\nfunction streamToString(stream, decoder = String, onProgress = null) {\r\n  let result = '';\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    stream.subscribe(\r\n      (token, isDone) => {\r\n        if (token !== null) {\r\n          const tokenStr = decoder(token);\r\n          result += tokenStr;\r\n          \r\n          if (onProgress) {\r\n            try {\r\n              onProgress(result.length, tokenStr);\r\n            } catch (error) {\r\n              // Ignore errors in progress callback\r\n            }\r\n          }\r\n        }\r\n        \r\n        if (isDone) {\r\n          resolve(result);\r\n        }\r\n      },\r\n      () => resolve(result)\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch a resource with progress tracking\r\n * @param {string} url - URL to fetch\r\n * @param {Function} [onProgress] - Progress callback (loaded, total, percentage)\r\n * @returns {Promise<ArrayBuffer>} Fetched data\r\n */\r\nasync function fetchWithProgress(url, onProgress) {\r\n  // Check for fetch API\r\n  if (typeof fetch !== 'function') {\r\n    throw new Error('Fetch API not available in this environment');\r\n  }\r\n  \r\n  const response = await fetch(url);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error ${response.status}: ${response.statusText}`);\r\n  }\r\n  \r\n  // Get content length if available\r\n  const contentLength = parseInt(response.headers.get('Content-Length') || '0', 10);\r\n  \r\n  // If we can't stream or track progress, just return the buffer\r\n  if (!response.body || !contentLength) {\r\n    return response.arrayBuffer();\r\n  }\r\n  \r\n  // Create a reader to stream the response\r\n  const reader = response.body.getReader();\r\n  let receivedLength = 0;\r\n  const chunks = [];\r\n  \r\n  // Process the stream\r\n  while (true) {\r\n    const { done, value } = await reader.read();\r\n    \r\n    if (done) {\r\n      break;\r\n    }\r\n    \r\n    chunks.push(value);\r\n    receivedLength += value.length;\r\n    \r\n    // Call progress callback\r\n    if (onProgress) {\r\n      const percentage = contentLength ? Math.round((receivedLength / contentLength) * 100) : 0;\r\n      onProgress(receivedLength, contentLength, percentage);\r\n    }\r\n  }\r\n  \r\n  // Concatenate chunks into a single buffer\r\n  const result = new Uint8Array(receivedLength);\r\n  let position = 0;\r\n  \r\n  for (const chunk of chunks) {\r\n    result.set(chunk, position);\r\n    position += chunk.length;\r\n  }\r\n  \r\n  return result.buffer;\r\n}\r\n\r\n/**\r\n * Create a chunked data loader for large files\r\n * @param {string} url - URL to the file\r\n * @param {number} [chunkSize=10*1024*1024] - Chunk size in bytes (default: 10MB)\r\n * @param {Function} [onProgress] - Progress callback\r\n * @returns {Object} Chunked loader interface\r\n */\r\nfunction createChunkedLoader(url, chunkSize = 10 * 1024 * 1024, onProgress) {\r\n  let contentLength = 0;\r\n  let loaded = 0;\r\n  let cancelled = false;\r\n  \r\n  /**\r\n   * Initialize the loader and get content info\r\n   * @returns {Promise<number>} Content length\r\n   */\r\n  async function init() {\r\n    try {\r\n      // Get content length with HEAD request\r\n      const response = await fetch(url, { method: 'HEAD' });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to initialize: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      contentLength = parseInt(response.headers.get('Content-Length') || '0', 10);\r\n      return contentLength;\r\n    } catch (error) {\r\n      logger.error('Error initializing chunked loader', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Load a specific chunk\r\n   * @param {number} start - Start byte\r\n   * @param {number} end - End byte\r\n   * @returns {Promise<ArrayBuffer>} Chunk data\r\n   */\r\n  async function loadChunk(start, end) {\r\n    if (cancelled) {\r\n      throw new Error('Loading cancelled');\r\n    }\r\n    \r\n    // Adjust end to not exceed content length\r\n    if (contentLength > 0 && end > contentLength) {\r\n      end = contentLength;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: { Range: `bytes=${start}-${end - 1}` }\r\n      });\r\n      \r\n      if (!response.ok && response.status !== 206) {\r\n        throw new Error(`Failed to load chunk: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const buffer = await response.arrayBuffer();\r\n      \r\n      // Update progress\r\n      loaded += buffer.byteLength;\r\n      \r\n      if (onProgress && contentLength > 0) {\r\n        const percentage = Math.round((loaded / contentLength) * 100);\r\n        onProgress(loaded, contentLength, percentage);\r\n      }\r\n      \r\n      return buffer;\r\n    } catch (error) {\r\n      if (!cancelled) {\r\n        logger.error(`Error loading chunk ${start}-${end}`, error);\r\n        throw error;\r\n      }\r\n      throw new Error('Loading cancelled');\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Load the entire file in chunks\r\n   * @returns {Promise<ArrayBuffer>} Complete file data\r\n   */\r\n  async function loadAll() {\r\n    // Initialize if not already done\r\n    if (contentLength === 0) {\r\n      await init();\r\n    }\r\n    \r\n    // If content length is unknown, fallback to regular fetch\r\n    if (contentLength === 0) {\r\n      return fetchWithProgress(url, onProgress);\r\n    }\r\n    \r\n    const chunks = [];\r\n    let position = 0;\r\n    \r\n    while (position < contentLength) {\r\n      const end = Math.min(position + chunkSize, contentLength);\r\n      const chunk = await loadChunk(position, end);\r\n      chunks.push(chunk);\r\n      position = end;\r\n      \r\n      if (cancelled) {\r\n        throw new Error('Loading cancelled');\r\n      }\r\n    }\r\n    \r\n    // Combine chunks\r\n    const result = new Uint8Array(contentLength);\r\n    let offset = 0;\r\n    \r\n    for (const chunk of chunks) {\r\n      result.set(new Uint8Array(chunk), offset);\r\n      offset += chunk.byteLength;\r\n    }\r\n    \r\n    return result.buffer;\r\n  }\r\n  \r\n  /**\r\n   * Cancel loading\r\n   */\r\n  function cancel() {\r\n    cancelled = true;\r\n  }\r\n  \r\n  /**\r\n   * Get current loading status\r\n   * @returns {Object} Status object\r\n   */\r\n  function getStatus() {\r\n    return {\r\n      contentLength,\r\n      loaded,\r\n      cancelled,\r\n      progress: contentLength ? loaded / contentLength : 0\r\n    };\r\n  }\r\n  \r\n  return {\r\n    init,\r\n    loadChunk,\r\n    loadAll,\r\n    cancel,\r\n    getStatus\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  TokenStream,\r\n  createTokenStream,\r\n  collectStream,\r\n  streamToString,\r\n  fetchWithProgress,\r\n  createChunkedLoader\r\n};","/**\r\n * Text formatting utilities for GGUF models\r\n * @module utils/formats\r\n */\r\n\r\n/**\r\n * Formats a prompt for chat completion\r\n * \r\n * @param {Array<Object>} messages - Array of message objects with role and content\r\n * @param {Object} options - Formatting options\r\n * @param {string} [options.systemPrompt=''] - System prompt to prepend\r\n * @param {boolean} [options.useMarkdown=false] - Whether to format in markdown\r\n * @param {string} [options.userLabel='User'] - Label for user messages\r\n * @param {string} [options.assistantLabel='Assistant'] - Label for assistant messages\r\n * @param {string} [options.systemLabel='System'] - Label for system messages\r\n * @returns {string} Formatted prompt\r\n */\r\nfunction formatChatPrompt(messages, options = {}) {\r\n  const {\r\n    systemPrompt = '',\r\n    useMarkdown = false,\r\n    userLabel = 'User',\r\n    assistantLabel = 'Assistant',\r\n    systemLabel = 'System'\r\n  } = options;\r\n\r\n  let prompt = '';\r\n  \r\n  // Add system prompt if provided\r\n  if (systemPrompt) {\r\n    if (useMarkdown) {\r\n      prompt += `**${systemLabel}**: ${systemPrompt}\\n\\n`;\r\n    } else {\r\n      prompt += `${systemLabel}: ${systemPrompt}\\n\\n`;\r\n    }\r\n  }\r\n  \r\n  // Add all messages\r\n  for (const message of messages) {\r\n    let label = '';\r\n    \r\n    // Determine the label based on role\r\n    if (message.role === 'user') {\r\n      label = userLabel;\r\n    } else if (message.role === 'assistant') {\r\n      label = assistantLabel;\r\n    } else if (message.role === 'system') {\r\n      label = systemLabel;\r\n    }\r\n    \r\n    // Add the message with appropriate formatting\r\n    if (useMarkdown) {\r\n      prompt += `**${label}**: ${message.content}\\n\\n`;\r\n    } else {\r\n      prompt += `${label}: ${message.content}\\n\\n`;\r\n    }\r\n  }\r\n  \r\n  // Add final prompt for assistant response\r\n  if (useMarkdown) {\r\n    prompt += `**${assistantLabel}**: `;\r\n  } else {\r\n    prompt += `${assistantLabel}: `;\r\n  }\r\n  \r\n  return prompt;\r\n}\r\n\r\n/**\r\n * Formats a completion prompt\r\n * \r\n * @param {string} prompt - The completion prompt\r\n * @param {Object} options - Formatting options\r\n * @param {string} [options.suffix=''] - Text to append after the prompt\r\n * @param {string} [options.prefix=''] - Text to prepend before the prompt\r\n * @returns {string} Formatted prompt\r\n */\r\nfunction formatCompletionPrompt(prompt, options = {}) {\r\n  const { suffix = '', prefix = '' } = options;\r\n  return `${prefix}${prompt}${suffix}`;\r\n}\r\n\r\n/**\r\n * Formats a list of instructions for instruction-following models\r\n * \r\n * @param {string|Array<string>} instructions - Instruction or list of instructions\r\n * @param {Object} options - Formatting options\r\n * @param {string} [options.prefix='Instructions:'] - Text to prepend before instructions\r\n * @param {string} [options.suffix=''] - Text to append after instructions\r\n * @param {boolean} [options.numbered=false] - Whether to number the instructions\r\n * @returns {string} Formatted instructions\r\n */\r\nfunction formatInstructions(instructions, options = {}) {\r\n  const {\r\n    prefix = 'Instructions:',\r\n    suffix = '',\r\n    numbered = false\r\n  } = options;\r\n  \r\n  let instructionList = Array.isArray(instructions) ? instructions : [instructions];\r\n  let formatted = prefix ? `${prefix}\\n` : '';\r\n  \r\n  // Add each instruction\r\n  instructionList.forEach((instruction, index) => {\r\n    if (numbered) {\r\n      formatted += `${index + 1}. ${instruction}\\n`;\r\n    } else {\r\n      formatted += `- ${instruction}\\n`;\r\n    }\r\n  });\r\n  \r\n  // Add suffix\r\n  if (suffix) {\r\n    formatted += `\\n${suffix}`;\r\n  }\r\n  \r\n  return formatted;\r\n}\r\n\r\n/**\r\n * Cleans and normalizes text output from the model\r\n * \r\n * @param {string} text - Text to clean\r\n * @param {Object} options - Cleaning options\r\n * @param {boolean} [options.trimWhitespace=true] - Whether to trim whitespace\r\n * @param {boolean} [options.removeExtraNewlines=true] - Whether to remove extra newlines\r\n * @param {boolean} [options.removeSpecialTokens=true] - Whether to remove special tokens like <eos>\r\n * @returns {string} Cleaned text\r\n */\r\nfunction cleanOutput(text, options = {}) {\r\n  const {\r\n    trimWhitespace = true,\r\n    removeExtraNewlines = true,\r\n    removeSpecialTokens = true\r\n  } = options;\r\n  \r\n  let cleaned = text;\r\n  \r\n  // Remove special tokens\r\n  if (removeSpecialTokens) {\r\n    cleaned = cleaned.replace(/<[^>]+>/g, '');\r\n  }\r\n  \r\n  // Remove extra newlines\r\n  if (removeExtraNewlines) {\r\n    cleaned = cleaned.replace(/\\n{3,}/g, '\\n\\n');\r\n  }\r\n  \r\n  // Trim whitespace\r\n  if (trimWhitespace) {\r\n    cleaned = cleaned.trim();\r\n  }\r\n  \r\n  return cleaned;\r\n}\r\n\r\n/**\r\n * Extracts and formats JSON response from model output\r\n * \r\n * @param {string} text - Model output text\r\n * @param {Object} options - Formatting options\r\n * @param {boolean} [options.extractFromText=true] - Whether to extract JSON from text\r\n * @param {boolean} [options.fixBrokenJson=true] - Attempt to fix malformed JSON\r\n * @returns {Object|null} Parsed JSON object or null if parsing failed\r\n */\r\nfunction extractJSON(text, options = {}) {\r\n  const {\r\n    extractFromText = true,\r\n    fixBrokenJson = true\r\n  } = options;\r\n  \r\n  let jsonText = text;\r\n  \r\n  // Extract JSON from text if requested\r\n  if (extractFromText) {\r\n    const jsonMatch = text.match(/```(?:json)?\\s*({[\\s\\S]*?})\\s*```/) || \r\n                      text.match(/{[\\s\\S]*?}/);\r\n    \r\n    if (jsonMatch) {\r\n      jsonText = jsonMatch[1];\r\n    }\r\n  }\r\n  \r\n  // Try to parse the JSON\r\n  try {\r\n    return JSON.parse(jsonText);\r\n  } catch (error) {\r\n    // If fixing broken JSON is not requested, return null\r\n    if (!fixBrokenJson) {\r\n      return null;\r\n    }\r\n    \r\n    // Attempt to fix common JSON issues\r\n    try {\r\n      // Replace single quotes with double quotes\r\n      let fixedJson = jsonText.replace(/'/g, '\"');\r\n      \r\n      // Fix unquoted keys\r\n      fixedJson = fixedJson.replace(/([{,]\\s*)(\\w+)(\\s*:)/g, '$1\"$2\"$3');\r\n      \r\n      // Fix trailing commas\r\n      fixedJson = fixedJson.replace(/,\\s*}/g, '}').replace(/,\\s*]/g, ']');\r\n      \r\n      return JSON.parse(fixedJson);\r\n    } catch (fixError) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a templated prompt with variable substitution\r\n * \r\n * @param {string} template - Template string with {variable} placeholders\r\n * @param {Object} variables - Object containing variable values\r\n * @returns {string} Formatted prompt with substituted variables\r\n */\r\nfunction templatePrompt(template, variables = {}) {\r\n  return template.replace(/\\{(\\w+)\\}/g, (match, variable) => {\r\n    return variables[variable] !== undefined ? variables[variable] : match;\r\n  });\r\n}\r\n\r\n/**\r\n * Truncates a prompt to fit within token limit\r\n * \r\n * @param {string} text - Text to truncate\r\n * @param {number} maxTokens - Maximum number of tokens\r\n * @param {Function} tokenCounter - Function to count tokens\r\n * @param {Object} options - Options for truncation\r\n * @param {boolean} [options.fromStart=true] - Truncate from start (keep end)\r\n * @param {string} [options.ellipsis='...'] - Ellipsis to use\r\n * @returns {string} Truncated text\r\n */\r\nfunction truncatePrompt(text, maxTokens, tokenCounter, options = {}) {\r\n  const {\r\n    fromStart = true,\r\n    ellipsis = '...'\r\n  } = options;\r\n  \r\n  // If text is already within token limit, return as is\r\n  const tokenCount = tokenCounter(text);\r\n  if (tokenCount <= maxTokens) {\r\n    return text;\r\n  }\r\n  \r\n  // Reserve tokens for ellipsis\r\n  const ellipsisTokens = tokenCounter(ellipsis);\r\n  const effectiveMaxTokens = maxTokens - ellipsisTokens;\r\n  \r\n  // Split text into words\r\n  const words = text.split(/\\s+/);\r\n  \r\n  if (fromStart) {\r\n    // Truncate from start (keep the end)\r\n    let result = '';\r\n    let currentTokens = 0;\r\n    \r\n    for (let i = words.length - 1; i >= 0; i--) {\r\n      const word = words[i];\r\n      const wordTokens = tokenCounter(word);\r\n      \r\n      if (currentTokens + wordTokens <= effectiveMaxTokens) {\r\n        result = word + (result ? ' ' + result : '');\r\n        currentTokens += wordTokens;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return ellipsis + ' ' + result;\r\n  } else {\r\n    // Truncate from end (keep the beginning)\r\n    let result = '';\r\n    let currentTokens = 0;\r\n    \r\n    for (let i = 0; i < words.length; i++) {\r\n      const word = words[i];\r\n      const wordTokens = tokenCounter(word);\r\n      \r\n      if (currentTokens + wordTokens <= effectiveMaxTokens) {\r\n        result += (result ? ' ' : '') + word;\r\n        currentTokens += wordTokens;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    \r\n    return result + ' ' + ellipsis;\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  formatChatPrompt,\r\n  formatCompletionPrompt,\r\n  formatInstructions,\r\n  cleanOutput,\r\n  extractJSON,\r\n  templatePrompt,\r\n  truncatePrompt\r\n};","/**\r\n * GGUF.js - Lightweight JavaScript package for GGUF language models\r\n * @module gguf\r\n */\r\n\r\n// Core functionality\r\nconst { GGUFModel, GenerationOptions, ModelContext, createModelId } = require('./core/model');\r\nconst loader = require('./core/loader');\r\nconst inference = require('./core/inference');\r\nconst tokenizer = require('./core/tokenizer');\r\n\r\n// Adapters\r\nconst nodeAdapter = require('./adapters/node');\r\nconst browserAdapter = require('./adapters/browser');\r\nconst reactHooks = require('./adapters/react');\r\n\r\n// Utilities\r\nconst logger = require('./utils/logger');\r\nconst memory = require('./utils/memory');\r\nconst streaming = require('./utils/streaming');\r\nconst formats = require('./utils/formats');\r\n\r\n// Determine environment\r\nconst isNode = typeof window === 'undefined' && typeof process !== 'undefined' && process.versions && process.versions.node;\r\nconst isBrowser = typeof window !== 'undefined';\r\nconst isReact = typeof window !== 'undefined' && typeof window.React !== 'undefined';\r\n\r\n// Get the default adapter based on environment\r\nconst getDefaultAdapter = () => {\r\n  if (isNode) {\r\n    return nodeAdapter;\r\n  } else if (isBrowser) {\r\n    return browserAdapter;\r\n  }\r\n  \r\n  // Fallback\r\n  logger.warn('No environment-specific adapter detected, some features may not work properly');\r\n  return null;\r\n};\r\n\r\n/**\r\n * Create an instance of GGUF.js with a specific adapter\r\n * @param {Object} adapter - The adapter to use\r\n * @returns {Object} GGUF.js instance\r\n */\r\nfunction createInstance(adapter) {\r\n  return {\r\n    // Core model functionality\r\n    loadModel: (path, options) => loader.loadModel(path, options, adapter),\r\n    unloadModel: (modelId) => loader.unloadModel(modelId, adapter),\r\n    getModel: (modelId) => loader.getModel(modelId),\r\n    listModels: () => loader.listModels(),\r\n    clearModels: () => loader.clearModels(adapter),\r\n    \r\n    // Text generation\r\n    generate: (model, prompt, options) => inference.generate(model, prompt, options, adapter),\r\n    streamGenerate: (model, prompt, onToken, options) => inference.streamGenerate(model, prompt, onToken, options, adapter),\r\n    cancelGeneration: (modelOrId) => inference.cancelGeneration(modelOrId),\r\n    \r\n    // Tokenization\r\n    tokenize: (model, text) => adapter.tokenize(model, text),\r\n    detokenize: (model, tokens) => adapter.detokenize(model, tokens),\r\n    \r\n    // Additional functionality based on adapter\r\n    ...(adapter.discoverModels ? { discoverModels: (dir) => adapter.discoverModels(dir) } : {}),\r\n    \r\n    // React hooks if in React environment\r\n    ...(isReact ? {\r\n      useModel: (options) => reactHooks.useModel(adapter, options),\r\n      useGeneration: (options) => reactHooks.useGeneration(adapter, options),\r\n      useChat: (options) => reactHooks.useChat(adapter, options)\r\n    } : {})\r\n  };\r\n}\r\n\r\n// Create a default instance with auto-detected adapter\r\nconst defaultAdapter = getDefaultAdapter();\r\nconst defaultInstance = createInstance(defaultAdapter);\r\n\r\n// Export default instance with all functionality\r\nmodule.exports = {\r\n  // Default instance methods\r\n  ...defaultInstance,\r\n  \r\n  // Core classes and functions\r\n  GGUFModel,\r\n  GenerationOptions,\r\n  ModelContext,\r\n  createModelId,\r\n  \r\n  // Factory function for custom instances\r\n  createInstance,\r\n  \r\n  // Adapters\r\n  adapters: {\r\n    node: nodeAdapter,\r\n    browser: browserAdapter,\r\n    react: reactHooks\r\n  },\r\n  \r\n  // Tokenization\r\n  tokenizer,\r\n  \r\n  // Utilities\r\n  utils: {\r\n    logger,\r\n    memory,\r\n    streaming,\r\n    formats\r\n  },\r\n  \r\n  // Environment detection\r\n  environment: {\r\n    isNode,\r\n    isBrowser,\r\n    isReact\r\n  },\r\n  \r\n  // Version information\r\n  version: '0.1.0'\r\n};"],"names":["createModelId","GGUFModel","GenerationOptions","ModelContext","logger","require$$0","require$$1","loader","inference","tokenizer","require$$2","initializeModel","tokenize","detokenize","detokenizeToken","runInference","runInferenceStreaming","freeModel","require","require$$3","require$$4","global","memory","streaming","formats","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10"],"mappings":"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"}